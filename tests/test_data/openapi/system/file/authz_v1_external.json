{
   "openapi":"3.0.1",
   "info":{
      "title":"Authorization",
      "description":"CCS Authorization",
      "version":"1.0.0"
   },
   "paths":{
      "/authorization/app/v1/application_instances/{app_instance_id}":{
         "get":{
            "tags":[
               "authorization",
               "application-metadata",
               "app-instance-api",
               "app-instance-application-metadata",
               "organizations-application-metadata",
               "organizations"
            ],
            "summary":"Get Application Instance Metadata",
            "description":"Retrieve authorization metadata for an application instance.Authz manages metadata at the application level, so application metadata is actually returned.",
            "operationId":"get_application_instance_metadata_authorization_app_v1_application_instances__app_instance_id__get",
            "parameters":[
               {
                  "description":"Unique identifier of the application instance",
                  "required":true,
                  "schema":{
                     "title":"Application Instance ID",
                     "type":"string",
                     "description":"Unique identifier of the application instance"
                  },
                  "name":"app_instance_id",
                  "in":"path"
               },
               {
                  "description":"Indicates whether or not to include application resource metadata in the response",
                  "required":false,
                  "schema":{
                     "title":"Include Application Resources",
                     "type":"boolean",
                     "description":"Indicates whether or not to include application resource metadata in the response",
                     "default":true
                  },
                  "name":"include_application_resources",
                  "in":"query"
               },
               {
                  "description":"Indicates whether or not to include global permission metadata in the response",
                  "required":false,
                  "schema":{
                     "title":"Include Permissions",
                     "type":"boolean",
                     "description":"Indicates whether or not to include global permission metadata in the response",
                     "default":true
                  },
                  "name":"include_permissions",
                  "in":"query"
               },
               {
                  "description":"Indicates whether or not to include predefined roles in the response",
                  "required":false,
                  "schema":{
                     "title":"Include Roles",
                     "type":"boolean",
                     "description":"Indicates whether or not to include predefined roles in the response",
                     "default":true
                  },
                  "name":"include_predefined_roles",
                  "in":"query"
               },
               {
                  "description":"Indicates whether or not to include scope resource metadata in the response",
                  "required":false,
                  "schema":{
                     "title":"Include Scope Resources",
                     "type":"boolean",
                     "description":"Indicates whether or not to include scope resource metadata in the response",
                     "default":true
                  },
                  "name":"include_scope_resources",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ApplicationInstance"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Application instance not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/application_instances/{app_instance_id}/onboard":{
         "post":{
            "tags":[
               "authorization",
               "on-boarding",
               "app-instance-api",
               "app-instance-on-boarding",
               "organizations-on-boarding",
               "organizations"
            ],
            "summary":"Application On-board",
            "description":"On-board Application with Authz",
            "operationId":"onboard_application_authorization_app_v1_application_instances__app_instance_id__onboard_post",
            "parameters":[
               {
                  "description":"Unique identifier of the application instance",
                  "required":true,
                  "schema":{
                     "title":"Application Instance ID",
                     "type":"string",
                     "description":"Unique identifier of the application instance"
                  },
                  "name":"app_instance_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"On-Boarding Data",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ApplicationRegistration"
                           }
                        ],
                        "description":"The Application on-board parameters"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RegistrationErrorList"
                        }
                     }
                  }
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/application_instances/{app_instance_id}/upgrade":{
         "post":{
            "tags":[
               "authorization",
               "application-upgrade",
               "app-instance-api",
               "app-instance-application-upgrade",
               "organizations-application-upgrade",
               "organizations"
            ],
            "summary":"Application Upgrade",
            "description":"Upgrade Application Authz Settings",
            "operationId":"upgrade_application_authorization_app_v1_application_instances__app_instance_id__upgrade_post",
            "parameters":[
               {
                  "description":"Unique identifier of the application instance",
                  "required":true,
                  "schema":{
                     "title":"Application Instance ID",
                     "type":"string",
                     "description":"Unique identifier of the application instance"
                  },
                  "name":"app_instance_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Upgrade Data",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ApplicationUpgrade"
                           }
                        ],
                        "description":"The application upgrade parameters"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/RegistrationErrorList"
                        }
                     }
                  }
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/users/{user_name}/enforce_batch":{
         "post":{
            "tags":[
               "authorization",
               "enforcement",
               "app-instance-api",
               "app-instance-enforcement"
            ],
            "summary":"Enforce permissions on a list of resources",
            "description":"Determine whether or not a subject has permission to a list of resources",
            "operationId":"enforce_permission_post_by_application_cid_batch_authorization_app_v1_customers__application_cid__users__user_name__enforce_batch_post",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Identifies the user by user's email",
                  "required":true,
                  "schema":{
                     "title":"User Name",
                     "type":"string",
                     "description":"Identifies the user by user's email"
                  },
                  "example":"user123@gmail.com",
                  "name":"user_name",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Enforcement Batch Request",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/EnforcementRequestBatch"
                           }
                        ],
                        "description":"Request parameters for a permission enforcement batch"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EnforcementBatchResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"User not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/users/{user_name}/enforce":{
         "get":{
            "tags":[
               "authorization",
               "enforcement",
               "app-instance-api",
               "app-instance-enforcement"
            ],
            "summary":"Enforce permissions on resource",
            "description":"Determine whether or not a subject has permission to a resource",
            "operationId":"enforce_permission_get_by_application_cid_authorization_app_v1_customers__application_cid__users__user_name__enforce_get",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Identifies the user by user's email",
                  "required":true,
                  "schema":{
                     "title":"User Name",
                     "type":"string",
                     "description":"Identifies the user by user's email"
                  },
                  "example":"user123@gmail.com",
                  "name":"user_name",
                  "in":"path"
               },
               {
                  "description":"Client can prefer not to use cached value by setting this to False",
                  "required":false,
                  "schema":{
                     "title":"Caching Required",
                     "type":"boolean",
                     "description":"Client can prefer not to use cached value by setting this to False",
                     "default":true
                  },
                  "name":"cache_required",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Permission",
                     "type":"string"
                  },
                  "name":"permission",
                  "in":"query"
               },
               {
                  "required":true,
                  "schema":{
                     "title":"Application Resource",
                     "type":"string"
                  },
                  "name":"application_resource",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Scope Resource Instance",
                     "type":"string"
                  },
                  "name":"scope_resource_instance",
                  "in":"query"
               },
               {
                  "required":false,
                  "schema":{
                     "title":"Account Type",
                     "type":"string"
                  },
                  "name":"account_type",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EnforcementResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"User not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "authorization",
               "enforcement",
               "app-instance-api",
               "app-instance-enforcement"
            ],
            "summary":"Enforce permissions on resource",
            "description":"Determine whether or not a subject has permission to a resource",
            "operationId":"enforce_permission_post_by_application_cid_authorization_app_v1_customers__application_cid__users__user_name__enforce_post",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Identifies the user by user's email",
                  "required":true,
                  "schema":{
                     "title":"User Name",
                     "type":"string",
                     "description":"Identifies the user by user's email"
                  },
                  "example":"user123@gmail.com",
                  "name":"user_name",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Enforcement Request",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/EnforcementRequest"
                           }
                        ],
                        "description":"Request parameters for a permission enforcement"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EnforcementResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"User not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/authorize":{
         "post":{
            "tags":[
               "authorization",
               "enforcement",
               "app-instance-api",
               "organizations-enforcement",
               "organizations"
            ],
            "summary":"Authorize permissions on a list of resources for an organization customer",
            "description":"Determine whether or not a subject has permission to a list of resources for an origanizaton customer",
            "operationId":"enforce_permissions_get_by_cid_and_subject_batch_authorization_app_v1_organizations__organization_id__authorize_post",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/OrganizationEnforcementRequest"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EnforcementBatchResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Subject not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/users/{user_name}/resources":{
         "post":{
            "tags":[
               "authorization",
               "resource",
               "app-instance-api",
               "app-instance-resource"
            ],
            "summary":"Get User Accessible Resources",
            "description":"Gets list of resources accessible to a user associated with a customer and application instance",
            "operationId":"get_user_accessible_resources_authorization_app_v1_customers__application_cid__users__user_name__resources_post",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Identifies the user by user's email",
                  "required":true,
                  "schema":{
                     "title":"User Name",
                     "type":"string",
                     "description":"Identifies the user by user's email"
                  },
                  "example":"user123@gmail.com",
                  "name":"user_name",
                  "in":"path"
               },
               {
                  "description":"Indicates whether or not to exclude scope resources in the response",
                  "required":false,
                  "schema":{
                     "title":"Exclude Scope Resources",
                     "type":"boolean",
                     "description":"Indicates whether or not to exclude scope resources in the response",
                     "default":false
                  },
                  "name":"exclude_scope_resources",
                  "in":"query"
               },
               {
                  "description":"Indicates whether or not to exclude resources and permissions that have been denied the user in the response",
                  "required":false,
                  "schema":{
                     "title":"Exclude Denies",
                     "type":"boolean",
                     "description":"Indicates whether or not to exclude resources and permissions that have been denied the user in the response",
                     "default":false
                  },
                  "name":"exclude_denies",
                  "in":"query"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Filter",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/GetUserAccessibleResourcesFilter"
                           }
                        ],
                        "description":"The filters to apply when fetching and returning the user's resource policies"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CompactResourcePolicyList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/resources":{
         "post":{
            "tags":[
               "authorization",
               "resource",
               "app-instance-api",
               "organizations-resource",
               "organizations"
            ],
            "summary":"Subject Accessible Resources",
            "description":" list of resources accessible to a subject associated with an organization",
            "operationId":"subject_accessible_resources_by_organization_authorization_app_v1_organizations__organization_id__resources_post",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Filter",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/SubjectAccessibleResourceFilter"
                           }
                        ],
                        "description":"The filters to apply when fetching and returning the subjects's resource policies"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CompactResourcePolicyList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/users/{user_name}":{
         "get":{
            "tags":[
               "authorization",
               "user",
               "app-instance-api",
               "app-instance-assignments"
            ],
            "summary":"Get User Application Role Assignments",
            "description":"Retrieve all role assignments for a user and a single application",
            "operationId":"get_user_application_role_assignments_by_application_cid_authorization_app_v1_customers__application_cid__users__user_name__get",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Identifies the user by user's email",
                  "required":true,
                  "schema":{
                     "title":"User Name",
                     "type":"string",
                     "description":"Identifies the user by user's email"
                  },
                  "example":"user123@gmail.com",
                  "name":"user_name",
                  "in":"path"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserApplicationRoleAssignment"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/users_with_scope":{
         "get":{
            "tags":[
               "authorization",
               "user",
               "app-instance-api",
               "app-instance-assignments"
            ],
            "summary":"Get users information using particular scope",
            "description":"Retrieve all users and their information which are using a particular scope",
            "operationId":"get_user_metadata_associated_with_scope_authorization_app_v1_customers__application_cid__users_with_scope_get",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"A filter expression that matches scope resource instance slugs",
                  "required":true,
                  "schema":{
                     "title":"Scope Resource Slug",
                     "type":"string",
                     "description":"A filter expression that matches scope resource instance slugs"
                  },
                  "example":"/my-app/foo/*",
                  "name":"scope_resource_instance",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersAssociatedWithScope"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Not found"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{platform_customer_id}/assignments":{
         "get":{
            "tags":[
               "authorization",
               "user",
               "app-instance-api",
               "app-instance-assignments"
            ],
            "summary":"Get Subjects Application Role Assignments",
            "description":"Retrieve all role assignments for subjects",
            "operationId":"get_subject_application_role_assignments_by_cid_authorization_app_v1_customers__platform_customer_id__assignments_get",
            "parameters":[
               {
                  "description":"Identifies the platform customer",
                  "required":true,
                  "schema":{
                     "title":"GLCP Platform Customer Id",
                     "type":"string",
                     "description":"Identifies the platform customer"
                  },
                  "name":"platform_customer_id",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/SubjectType"
                  },
                  "name":"subject_type",
                  "in":"query"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":false,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"query"
               },
               {
                  "description":"Identifies the subject",
                  "required":false,
                  "schema":{
                     "title":"Subject Id",
                     "type":"string",
                     "description":"Identifies the subject"
                  },
                  "name":"subject_id",
                  "in":"query"
               },
               {
                  "description":"Identifies the application",
                  "required":false,
                  "schema":{
                     "title":"Application Id",
                     "type":"string",
                     "description":"Identifies the application"
                  },
                  "name":"application_id",
                  "in":"query"
               },
               {
                  "description":"The maximum number of items to retrieve",
                  "required":false,
                  "schema":{
                     "title":"Limit",
                     "maximum":2000.0,
                     "minimum":1.0,
                     "type":"integer",
                     "description":"The maximum number of items to retrieve",
                     "default":2000
                  },
                  "name":"limit",
                  "in":"query"
               },
               {
                  "description":"The starting offset from which to begin retrieving items",
                  "required":false,
                  "schema":{
                     "title":"Offset",
                     "minimum":0.0,
                     "type":"integer",
                     "description":"The starting offset from which to begin retrieving items",
                     "default":0
                  },
                  "name":"offset",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CustomerAssignmentsPaginate"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "authorization",
               "user",
               "app-instance-api",
               "app-instance-assignments"
            ],
            "summary":"Update subject Role and rrp Assignments",
            "description":"Updates application role and associated rrp assignments for a subject",
            "operationId":"update_subject_role_assignments_authorization_app_v1_customers__platform_customer_id__assignments_put",
            "parameters":[
               {
                  "description":"Identifies the platform customer",
                  "required":true,
                  "schema":{
                     "title":"GLCP Platform Customer Id",
                     "type":"string",
                     "description":"Identifies the platform customer"
                  },
                  "name":"platform_customer_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Roles",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/SubjectRoleUpdates"
                           }
                        ],
                        "description":"Update action and list of affected roles"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Failed to update user role assignment with resource restriction due to bad parameters"
               },
               "401":{
                  "description":"Failed to update user role assignment with resource restriction as it's not authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Failed to update user role assignment with resource restriction due to subject or application customer not found"
               },
               "500":{
                  "description":"Failed to update user role assignment with resource restriction due to internal server error"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/customers/{application_cid}/scope_resource_instance":{
         "put":{
            "tags":[
               "authorization",
               "scope-resource",
               "app-instance-scope-resource",
               "app-instance-api"
            ],
            "summary":"Rename Scope Resource Instance",
            "description":"Rename a scope instance",
            "operationId":"update_scope_resource_instance_authorization_app_v1_customers__application_cid__scope_resource_instance_put",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Scope Instance update model",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ScopeInstanceUpdate"
                           }
                        ],
                        "description":"Unique identifier and name for scope instance to be updated"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Scope instance not found"
               },
               "500":{
                  "description":"Failed to update scope instance due to an internal error"
               },
               "422":{
                  "description":"Can't process request"
               }
            }
         },
         "delete":{
            "tags":[
               "authorization",
               "scope-resource",
               "app-instance-scope-resource",
               "app-instance-api"
            ],
            "summary":"Delete Scope Resource Instance",
            "description":"Dissociates the identified scope resource from authorization policies",
            "operationId":"delete_scope_resource_instance_authorization_app_v1_customers__application_cid__scope_resource_instance_delete",
            "parameters":[
               {
                  "description":"The application customer identifier",
                  "required":true,
                  "schema":{
                     "title":"Application Customer Id",
                     "type":"string",
                     "description":"The application customer identifier"
                  },
                  "name":"application_cid",
                  "in":"path"
               },
               {
                  "description":"Slug identifying the scope resource instance",
                  "required":true,
                  "schema":{
                     "title":"Scope Resource Slug",
                     "type":"string",
                     "description":"Slug identifying the scope resource instance"
                  },
                  "example":"/my-app/foo/101",
                  "name":"scope_instance_slug",
                  "in":"query"
               }
            ],
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Scope Resource Instance not found"
               },
               "500":{
                  "description":"Internal Server Error"
               },
               "422":{
                  "description":"Can't process request"
               }
            }
         }
      },
      "/authorization/app/v1/customers/scope_resource_instance":{
         "post":{
            "tags":[
               "authorization",
               "scope-resource",
               "app-instance-api"
            ],
            "summary":"Create a scope resource instance",
            "description":"Create a scope resource instance",
            "operationId":"create_scope_resource_instance_authorization_app_v1_customers_scope_resource_instance_post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Scope Resource Instance",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ScopeInstance"
                           }
                        ],
                        "description":"Scope Resource Instance to be added"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "500":{
                  "description":"Failed to create scope resource instance"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/scope_resource_instances":{
         "put":{
            "tags":[
               "authorization",
               "scope-resource",
               "organizations-scope-resource",
               "app-instance-api",
               "organizations"
            ],
            "summary":"Update organization level Scope Resource Instance",
            "description":"Update Organization level Scope instance",
            "operationId":"update_organization_scope_resource_instance_authorization_app_v1_organizations__organization_id__scope_resource_instances_put",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Scope Instance update model",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ScopeInstanceUpdate"
                           }
                        ],
                        "description":"Unique identifier and name for scope instance to be updated"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Scope instance not found"
               },
               "500":{
                  "description":"Failed to update scope instance due to an internal error"
               },
               "422":{
                  "description":"Can't process request"
               }
            }
         },
         "post":{
            "tags":[
               "authorization",
               "scope-resource",
               "organizations-scope-resource",
               "app-instance-api",
               "organizations"
            ],
            "summary":"Create organization level scope resource instance",
            "description":"Create a scope resource instance",
            "operationId":"create_organization_scope_resource_instance_authorization_app_v1_organizations__organization_id__scope_resource_instances_post",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Scope Resource Instance",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ScopeInstance"
                           }
                        ],
                        "description":"Scope Resource Instance to be added"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "500":{
                  "description":"Failed to create scope resource instance"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "authorization",
               "scope-resource",
               "organizations-scope-resource",
               "app-instance-api",
               "organizations"
            ],
            "summary":"Delete organization level Scope Resource Instance",
            "description":"Dissociates the identified scope resource from authorization policies",
            "operationId":"delete_organization_scope_resource_instance_authorization_app_v1_organizations__organization_id__scope_resource_instances_delete",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "description":"Unique application instance ID",
                  "required":true,
                  "schema":{
                     "title":"Application Instance ID",
                     "type":"string",
                     "description":"Unique application instance ID"
                  },
                  "name":"application_instance_id",
                  "in":"query"
               },
               {
                  "description":"Slug identifying the scope resource instance",
                  "required":true,
                  "schema":{
                     "title":"Scope Resource Slug",
                     "type":"string",
                     "description":"Slug identifying the scope resource instance"
                  },
                  "example":"/my-app/foo/101",
                  "name":"scope_instance_slug",
                  "in":"query"
               }
            ],
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Scope Resource Instance not found"
               },
               "500":{
                  "description":"Internal Server Error"
               },
               "422":{
                  "description":"Can't process request"
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/assignments":{
         "get":{
            "tags":[
               "authorization",
               "app-instance-api",
               "organizations-assignments",
               "organizations"
            ],
            "summary":"Get Subjects Application Role Assignments",
            "description":"Retrieve all role assignments for subjects",
            "operationId":"get_subject_application_role_assignments_by_cid_authorization_app_v1_organizations__organization_id__assignments_get",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "required":false,
                  "schema":{
                     "$ref":"#/components/schemas/SubjectType"
                  },
                  "name":"subject_type",
                  "in":"query"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":false,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"query"
               },
               {
                  "description":"Identifies the subject",
                  "required":false,
                  "schema":{
                     "title":"Subject Id",
                     "type":"string",
                     "description":"Identifies the subject"
                  },
                  "name":"subject_id",
                  "in":"query"
               },
               {
                  "description":"Identifies the application",
                  "required":false,
                  "schema":{
                     "title":"Application Id",
                     "type":"string",
                     "description":"Identifies the application"
                  },
                  "name":"application_id",
                  "in":"query"
               },
               {
                  "description":"The maximum number of items to retrieve",
                  "required":false,
                  "schema":{
                     "title":"Limit",
                     "maximum":2000.0,
                     "minimum":1.0,
                     "type":"integer",
                     "description":"The maximum number of items to retrieve",
                     "default":2000
                  },
                  "name":"limit",
                  "in":"query"
               },
               {
                  "description":"The starting offset from which to begin retrieving items",
                  "required":false,
                  "schema":{
                     "title":"Offset",
                     "minimum":0.0,
                     "type":"integer",
                     "description":"The starting offset from which to begin retrieving items",
                     "default":0
                  },
                  "name":"offset",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/CustomerAssignmentsPaginate"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "authorization",
               "app-instance-api",
               "organizations-assignments",
               "organizations"
            ],
            "summary":"Update subject Role and rrp Assignments",
            "description":"Updates application role and associated rrp assignments for a subject",
            "operationId":"update_subject_role_assignments_authorization_app_v1_organizations__organization_id__assignments_put",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Roles",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/SubjectRoleUpdates"
                           }
                        ],
                        "description":"Update action and list of affected roles"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/resource_restrictions":{
         "get":{
            "tags":[
               "authorization",
               "resource_restriction",
               "app-instance-api",
               "organizations-resource-restriction",
               "organizations"
            ],
            "summary":"Get list of organizations Resource restriction policy",
            "description":"Gets all resource restriction policies available for a customer",
            "operationId":"get_resource_restriction_policy_list_authorization_app_v1_organizations__organization_id__resource_restrictions_get",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":false,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"query"
               },
               {
                  "description":"Returns paginated policies for a particular application_id, defaults to None",
                  "required":false,
                  "schema":{
                     "title":"Filter on application_id",
                     "type":"string",
                     "description":"Returns paginated policies for a particular application_id, defaults to None"
                  },
                  "name":"application_id",
                  "in":"query"
               },
               {
                  "description":"Returns paginated policies matching name, defaults to None",
                  "required":false,
                  "schema":{
                     "title":"Filter on resource restriction policy name",
                     "type":"string",
                     "description":"Returns paginated policies matching name, defaults to None"
                  },
                  "name":"name",
                  "in":"query"
               },
               {
                  "description":"To fetch policies exactly matching the provided name, defaults to False",
                  "required":false,
                  "schema":{
                     "title":"Flag for exact match on name",
                     "type":"boolean",
                     "description":"To fetch policies exactly matching the provided name, defaults to False",
                     "default":false
                  },
                  "name":"exact_match",
                  "in":"query"
               },
               {
                  "description":"The maximum number of items to retrieve",
                  "required":false,
                  "schema":{
                     "title":"Limit",
                     "maximum":2000.0,
                     "minimum":1.0,
                     "type":"integer",
                     "description":"The maximum number of items to retrieve",
                     "default":2000
                  },
                  "name":"limit",
                  "in":"query"
               },
               {
                  "description":"The starting offset from which to begin retrieving items",
                  "required":false,
                  "schema":{
                     "title":"Offset",
                     "minimum":0.0,
                     "type":"integer",
                     "description":"The starting offset from which to begin retrieving items",
                     "default":0
                  },
                  "name":"offset",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PaginatedRRPList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to fetch policies for this customer"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "500":{
                  "description":"Failed to fetch resource restriction policy group(s)"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "authorization",
               "resource_restriction",
               "app-instance-api",
               "organizations-resource-restriction",
               "organizations"
            ],
            "summary":"Creates organizations resource restriction policy group",
            "description":"Create a resource restriction policy",
            "operationId":"create_resource_restriction_policy_authorization_app_v1_organizations__organization_id__resource_restrictions_post",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Resource Restriction Policy",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/OrgResourceRestrictionPolicy"
                           }
                        ],
                        "description":"The name, description and scope instances to be grouped as a resource restriction policy group"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "201":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "500":{
                  "description":"Failed to create resource restriction policy group"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/resource_restrictions/{resource_restriction_policy_id}/scopes":{
         "get":{
            "tags":[
               "authorization",
               "resource_restriction",
               "app-instance-api",
               "organizations-resource-restriction",
               "organizations"
            ],
            "summary":"Get paginated list of organizations scope instances for resource restriction policy",
            "description":"Gets all scope instances linked to a resource restriction policy available for a customer",
            "operationId":"get_resource_restriction_policy_list_with_scopes_authorization_app_v1_organizations__organization_id__resource_restrictions__resource_restriction_policy_id__scopes_get",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":true,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"path"
               },
               {
                  "description":"The maximum number of items to retrieve",
                  "required":false,
                  "schema":{
                     "title":"Limit",
                     "maximum":2000.0,
                     "minimum":1.0,
                     "type":"integer",
                     "description":"The maximum number of items to retrieve",
                     "default":2000
                  },
                  "name":"limit",
                  "in":"query"
               },
               {
                  "description":"The starting offset from which to begin retrieving items",
                  "required":false,
                  "schema":{
                     "title":"Offset",
                     "minimum":0.0,
                     "type":"integer",
                     "description":"The starting offset from which to begin retrieving items",
                     "default":0
                  },
                  "name":"offset",
                  "in":"query"
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PaginatedRRPList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "500":{
                  "description":"Failed to fetch resource restriction policy group(s)"
               },
               "404":{
                  "description":"Unable to fetch policies for this customer"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/organizations/{organization_id}/resource_restrictions/{resource_restriction_policy_id}":{
         "put":{
            "tags":[
               "authorization",
               "resource_restriction",
               "app-instance-api",
               "organizations-resource-restriction",
               "organizations"
            ],
            "summary":"Update organizations resource restriction policy",
            "description":"Updates resource restriction policy name, description and scope resource instances",
            "operationId":"update_resource_restriction_policy_authorization_app_v1_organizations__organization_id__resource_restrictions__resource_restriction_policy_id__put",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":true,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"path"
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "title":"Resource Restriction Policy Scope Instance Updates",
                        "allOf":[
                           {
                              "$ref":"#/components/schemas/ResourceRestrictionScopeInstanceUpdates"
                           }
                        ],
                        "description":"scope resource instances to be added, deleted or updated"
                     }
                  }
               },
               "required":true
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{

                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"Forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Resource restriction policy not found"
               },
               "500":{
                  "description":"Failed to Update resource restriction policy"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "authorization",
               "resource_restriction",
               "app-instance-api",
               "organizations-resource-restriction",
               "organizations"
            ],
            "summary":"deletes organizations resource restriction policy group",
            "description":"delete a resource restriction policy",
            "operationId":"delete_resource_restriction_policies_authorization_app_v1_organizations__organization_id__resource_restrictions__resource_restriction_policy_id__delete",
            "parameters":[
               {
                  "description":"Identifies the organization",
                  "required":true,
                  "schema":{
                     "title":"Organization Id",
                     "type":"string",
                     "description":"Identifies the organization"
                  },
                  "name":"organization_id",
                  "in":"path"
               },
               {
                  "description":"Identifies the Resource Restriction Policy",
                  "required":true,
                  "schema":{
                     "title":"Resource Restriction Policy ID",
                     "type":"string",
                     "description":"Identifies the Resource Restriction Policy"
                  },
                  "name":"resource_restriction_policy_id",
                  "in":"path"
               }
            ],
            "responses":{
               "204":{
                  "description":"Successful Response"
               },
               "400":{
                  "description":"Bad request"
               },
               "401":{
                  "description":"The operation cannot be authorized"
               },
               "403":{
                  "description":"The operation is forbidden"
               },
               "405":{
                  "description":"The method is not allowed on this path"
               },
               "404":{
                  "description":"Resource restriction policy not found"
               },
               "500":{
                  "description":"Failed to delete resource restriction policy"
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/authorization/app/v1/status":{
         "get":{
            "tags":[
               "authorization",
               "health",
               "health-api"
            ],
            "summary":"Service status check",
            "description":"Public endpoint to check service health",
            "operationId":"check_status_authorization_app_v1_status_get",
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/StatusResponse"
                        }
                     }
                  }
               },
               "503":{
                  "description":"Service is unhealthy",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/StatusResponse"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "ApplicationInstance":{
            "title":"ApplicationInstance",
            "required":[
               "application_id",
               "application_instance_id"
            ],
            "type":"object",
            "properties":{
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"The application's unique identifier"
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Permission"
                  },
                  "description":"The application's global permissions"
               },
               "application_resources":{
                  "title":"Application Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationResourcePermissions"
                  },
                  "description":"The application's static resources"
               },
               "scope_resources":{
                  "title":"Scope Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeResource"
                  },
                  "description":"The application's dynamic scope resources"
               },
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Role"
                  },
                  "description":"The application's predefined roles"
               },
               "application_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier"
               },
               "broker_url":{
                  "title":"Broker Relative URL",
                  "type":"string",
                  "description":"Relative path to the application instance broker endpoint. Omit the scheme, host and port as those were captured during application instance onboarding.",
                  "example":"/app-service/broker/v1/"
               },
               "version":{
                  "title":"Application Instance Version",
                  "type":"string",
                  "description":"Identifies the version of the application instance that is registered or to be registered",
                  "example":"1.0"
               },
               "one_role_only":{
                  "title":"Support one role only",
                  "type":"boolean",
                  "description":"Identifies whether the application instance supports only one assignment per user"
               }
            },
            "description":"The authorization metadata for an application instance"
         },
         "ApplicationReference":{
            "title":"ApplicationReference",
            "required":[
               "application_id"
            ],
            "type":"object",
            "properties":{
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"The application unique identifier"
               }
            },
            "description":"Identifies an application"
         },
         "ApplicationRegistration":{
            "title":"ApplicationRegistration",
            "required":[
               "application_id",
               "application_slug"
            ],
            "type":"object",
            "properties":{
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"The application's unique identifier"
               },
               "app_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier",
                  "default":"00000000-0000-0000-0000-000000000001"
               },
               "application_slug":{
                  "title":"Application Slug",
                  "type":"string",
                  "description":"The slug or short name identifying the application",
                  "example":"my-app"
               },
               "broker_url":{
                  "title":"Broker Relative URL",
                  "type":"string",
                  "description":"Relative path to the application instance broker endpoint. Omit the scheme, host and port as those were captured during application instance onboarding.",
                  "example":"/app-service/broker/v1/"
               },
               "version":{
                  "title":"Application Instance Version",
                  "type":"string",
                  "description":"Identifies the version of the application instance that is registered or to be registered",
                  "example":"1.0"
               },
               "one_role_only":{
                  "title":"Single Role Assignment",
                  "type":"boolean",
                  "description":"Identifies whether the application instance supports only one assignment per user",
                  "default":false,
                  "example":"false"
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Permission"
                  },
                  "description":"The application's global permissions"
               },
               "application_resources":{
                  "title":"Application Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationResourcePermissions"
                  },
                  "description":"The application's static resources"
               },
               "scope_resources":{
                  "title":"Scope Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeResource"
                  },
                  "description":"The application's dynamic scope resources"
               },
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PredefinedRoleCreation"
                  },
                  "description":"The application's predefined roles"
               }
            },
            "description":"A request to register an application instance with Authz"
         },
         "ApplicationResourcePermissionUpdate":{
            "title":"ApplicationResourcePermissionUpdate",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource. This is an immutable identifier.",
                  "example":"/my-app/foo/bar"
               },
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"Sets the resource name"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"Sets the resource description"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__resource__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the resource"
               },
               "account_types":{
                  "title":"Account Types",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"Sets the account types allowed for this application resource, replacing the existing set"
               },
               "scope_resources":{
                  "title":"Scope Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourceReference"
                  },
                  "description":"Sets the scope resources associated with this application resource, replacing the existing set"
               },
               "permissions":{
                  "title":"Permissions",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/PermissionComponentSetUpdate"
                     }
                  ],
                  "description":"Update specification for the resource's permission set"
               },
               "default_permissions":{
                  "title":"Default Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionReference"
                  },
                  "description":"Sets the resource's default permission set, replacing the existing set"
               }
            },
            "description":"An application resource update specification"
         },
         "ApplicationResourcePermissions":{
            "title":"ApplicationResourcePermissions",
            "required":[
               "name",
               "slug",
               "permissions"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The resource name"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource",
                  "example":"/my-app/foo/bar"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"A longer text description of the resource"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__resource__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the resource"
               },
               "account_types":{
                  "title":"Account Types",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"All customer account types that may access the application resource, e.g. 'msp', 'tenant'"
               },
               "scope_resources":{
                  "title":"Scope Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourceReference"
                  },
                  "description":"Specifies the scope resources that can have its instances associated witha role assignment when the role contains this application resource."
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionComponent"
                  },
                  "description":"All permissions allowed for the resource"
               },
               "default_permissions":{
                  "title":"Default Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionReference"
                  },
                  "description":"Default permissions when building a role in the UI"
               }
            },
            "description":"An application resource and the permissions that may be associated with it"
         },
         "ApplicationResourceUpgrade":{
            "title":"ApplicationResourceUpgrade",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationResourcePermissions"
                  },
                  "description":"A list of application resources to add"
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationResourcePermissionUpdate"
                  },
                  "description":"A list of application resource update specifiers"
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"A list of application resource slugs"
               }
            },
            "description":"An application resource upgrade specification.\nThe only operation permitted at this time is adding new resources."
         },
         "ApplicationUpgrade":{
            "title":"ApplicationUpgrade",
            "type":"object",
            "properties":{
               "app_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier",
                  "default":"00000000-0000-0000-0000-000000000001"
               },
               "broker_url":{
                  "title":"Broker Relative URL",
                  "type":"string",
                  "description":"Relative path to the application instance broker endpoint. Omit the scheme, host and port as those were captured during application instance onboarding. Required only if it's changed since onboarding or the last upgrade.",
                  "example":"/app-service/broker/v1/"
               },
               "version":{
                  "title":"Application Instance Version",
                  "type":"string",
                  "description":"Identifies the version of the application instance that is registered or to be registered",
                  "example":"1.0"
               },
               "one_role_only":{
                  "title":"Single Role Assignment",
                  "type":"boolean",
                  "description":"Identifies whether the application instance supports only one assignment per user",
                  "example":"true"
               },
               "permissions":{
                  "title":"Permissions",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/PermissionSetUpdate"
                     }
                  ],
                  "description":"The application's global permission upgrade specification"
               },
               "application_resources":{
                  "title":"Application Resources",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ApplicationResourceUpgrade"
                     }
                  ],
                  "description":"The application's static resource upgrade specification"
               },
               "scope_resources":{
                  "title":"Scope Resources",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ScopeResourceUpgrade"
                     }
                  ],
                  "description":"The application's scope resource upgrade specification"
               },
               "roles":{
                  "title":"Roles",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/RoleUpgrade"
                     }
                  ],
                  "description":"The application's predefined role upgrade specification"
               }
            },
            "description":"A request to upgrade an application already registered with Authz"
         },
         "CompactResourcePolicy":{
            "title":"CompactResourcePolicy",
            "required":[
               "application_resource",
               "permissions",
               "effect"
            ],
            "type":"object",
            "properties":{
               "application_resource":{
                  "title":"Application Resource Slug",
                  "type":"string",
                  "description":"The slug identifying an application resource",
                  "example":"/my-app/foo/bar"
               },
               "permissions":{
                  "title":"Permission Slugs",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"The slugs or short names of the permissions granted to the resource",
                  "example":[
                     "my-app.foo.read",
                     "my-app.foo.write"
                  ]
               },
               "scope_resource_instances":{
                  "title":"Scope Resource Instance Matchers",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"The scope resource instance matchers assigned to the subject in association with the application resource and permissions",
                  "example":[
                     "/my-app/widgets/101",
                     "/my-app/widgets/215"
                  ]
               },
               "effect":{
                  "title":"Effect",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Effect"
                     }
                  ],
                  "description":"The permission effect"
               }
            },
            "description":"Compact representation of an authorization policy"
         },
         "CompactResourcePolicyList":{
            "title":"CompactResourcePolicyList",
            "required":[
               "resources"
            ],
            "type":"object",
            "properties":{
               "resources":{
                  "title":"Resources",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/CompactResourcePolicy"
                  },
                  "description":"List of resource policies"
               }
            },
            "description":"A list of authorization policies in a compact representation"
         },
         "CustomerAssignmentsPaginate":{
            "title":"CustomerAssignmentsPaginate",
            "type":"object",
            "properties":{
               "assignments":{
                  "title":"Customer Role assignments for all subjects in an account",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/SubjectAssignmentSummaryWithRRP"
                  },
                  "description":"List of roles that have been assigned to the user along with scope assigned for a role",
                  "default":[

                  ]
               },
               "pagination":{
                  "title":"Pagnation",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Pagination"
                     }
                  ],
                  "description":"Pagination information for the subjects list",
                  "default":{
                     "offset":0,
                     "count_per_page":2000,
                     "total_count":0
                  }
               }
            },
            "description":"List of a customer's subject role assignments along with RRPs tied to a role"
         },
         "Effect":{
            "title":"Effect",
            "enum":[
               "ALLOW",
               "DENY"
            ],
            "type":"string",
            "description":"The effect, whether to allow or deny, permissions on resources"
         },
         "EnforcementBatchResponse":{
            "title":"EnforcementBatchResponse",
            "required":[
               "effects"
            ],
            "type":"object",
            "properties":{
               "effects":{
                  "title":"Effects",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EnforcementResponseAppResource"
                  },
                  "description":"List of Enforcement Responses with application resoure slug as the key"
               }
            }
         },
         "EnforcementRequest":{
            "title":"EnforcementRequest",
            "required":[
               "permission",
               "application_resource"
            ],
            "type":"object",
            "properties":{
               "permission":{
                  "title":"Permission Slug",
                  "type":"string",
                  "description":"The slug or short name of the permission to assert for enforcement"
               },
               "application_resource":{
                  "title":"Application Resource Slug",
                  "type":"string",
                  "description":"The slug or short name of the application resource against which to assert enforcement"
               },
               "scope_resource_instance":{
                  "title":"Scope Resource Instance Slug",
                  "type":"string",
                  "description":"The slug or short name of the scope resource instance against which to assert enforcement"
               },
               "account_type":{
                  "title":"Account Type",
                  "type":"string",
                  "description":"The type of user's customer account, e.g. 'msp', 'tenant'"
               }
            },
            "description":"A resource access enforcement request"
         },
         "EnforcementRequestBatch":{
            "title":"EnforcementRequestBatch",
            "required":[
               "enforcements"
            ],
            "type":"object",
            "properties":{
               "enforcements":{
                  "title":"Enforcements",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EnforcementRequest"
                  },
                  "description":"List of enforcement requests"
               }
            }
         },
         "EnforcementResponse":{
            "title":"EnforcementResponse",
            "required":[
               "effect"
            ],
            "type":"object",
            "properties":{
               "effect":{
                  "title":"Effect",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Effect"
                     }
                  ],
                  "description":"The effect, 'ALLOW' or 'DENY', of the permission on the resource for the user"
               }
            },
            "description":"A resource access enforcement response"
         },
         "EnforcementResponseAppResource":{
            "title":"EnforcementResponseAppResource",
            "required":[
               "application_resource",
               "permission",
               "effect"
            ],
            "type":"object",
            "properties":{
               "application_resource":{
                  "title":"Application Resource Slug",
                  "type":"string",
                  "description":"The slug identifying an application resource",
                  "example":"/my-app/foo/bar"
               },
               "permission":{
                  "title":"Permission Slug",
                  "type":"string",
                  "description":"The slug or short name of the permission to assert for enforcement"
               },
               "effect":{
                  "title":"Effect",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Effect"
                     }
                  ],
                  "description":"The effect, 'ALLOW' or 'DENY', of the permission on the resource for the user"
               },
               "scope_resource_instance":{
                  "title":"Scope Resource Instance Slug",
                  "type":"string",
                  "description":"The slug or short name of the scope resource instance against which to assert enforcement"
               }
            }
         },
         "GetUserAccessibleResourcesFilter":{
            "title":"GetUserAccessibleResourcesFilter",
            "required":[
               "resource_filters"
            ],
            "type":"object",
            "properties":{
               "resource_filters":{
                  "title":"Resource Filters",
                  "minItems":1,
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/GetUserAccessibleResourcesFilterItem"
                  },
                  "description":"A list of resource filters. User policies matching any filter in the list will be returned."
               }
            },
            "description":"The filter for the get user accessible resources API.\n\nThe resource_filters list may contain many filter items.  Many items are combined\nwith a logical OR.  User resource policies matching any filter item in the list\nwill be returned.",
            "example":{
               "resource_filters":[
                  {
                     "application_resource":"/test-app/baz"
                  },
                  {
                     "application_resource":"/test-app/bar",
                     "permissions":[
                        "test-app.bar.read"
                     ]
                  },
                  {
                     "application_resource":"/test-app/foo",
                     "permissions":[
                        "test-app.foo.read",
                        "test-app.foo.write"
                     ],
                     "scope_resource_instances":[
                        "/test-app/doodads/part1",
                        "/test-app/gizmos/*"
                     ]
                  }
               ]
            }
         },
         "GetUserAccessibleResourcesFilterItem":{
            "title":"GetUserAccessibleResourcesFilterItem",
            "required":[
               "application_resource"
            ],
            "type":"object",
            "properties":{
               "application_resource":{
                  "title":"Application Resource",
                  "type":"string",
                  "description":"The application resource slug to filter on"
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"The permission slugs filter results on"
               },
               "scope_resource_instances":{
                  "title":"Scope Resource Instances",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"The scope resource instance matchers to filter results on"
               }
            },
            "description":"An item in the filter list for the get user accessible resources API.\n\nResource policies match the filter only when:\n\n1) The required filter application_resource matches the policy application resource\n\n2) The filter permissions list is optional.  If provided, the policy must contain at\n    least one of the permissions in the filter permissions list.  Only the permissions\n    requested in the filter will be returned.\n\n3) The filter scope_resource_instances list is optional.  If provided, the user must be\n    assigned at least one of the scope resource instances in the filter list.  Only the\n    scope resource instances specified in the filter will be returned."
         },
         "HTTPValidationError":{
            "title":"HTTPValidationError",
            "type":"object",
            "properties":{
               "detail":{
                  "title":"Detail",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ValidationError"
                  }
               }
            }
         },
         "LevelType":{
            "title":"LevelType",
            "enum":[
               "WORKSPACE",
               "ORGANIZATION"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "OrgResourceRestrictionPolicy":{
            "title":"OrgResourceRestrictionPolicy",
            "required":[
               "name",
               "scope_resource_instances",
               "application_id"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "maxLength":150,
                  "type":"string",
                  "description":"Name of the resource restriction policy"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"A longer text description about resource restriction policy"
               },
               "scope_resource_instances":{
                  "title":"Scope Instances",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeInstance"
                  },
                  "description":"The list of scope instances"
               },
               "application_id":{
                  "title":"Application id",
                  "type":"string"
               }
            },
            "description":"Model for org resource restriction policy with required application id"
         },
         "OrgRoleReference":{
            "title":"OrgRoleReference",
            "required":[
               "application_id"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"The mandatory slug or short name of the role applicable for all APIs excluding Internal Apis."
               },
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"Unique identifier of th eapplication with which the role is associated"
               }
            },
            "description":"Identifies a role."
         },
         "OrganizationEnforcementRequest":{
            "title":"OrganizationEnforcementRequest",
            "required":[
               "enforcements",
               "application_id",
               "subject_id"
            ],
            "type":"object",
            "properties":{
               "enforcements":{
                  "title":"Enforcements",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EnforcementRequest"
                  },
                  "description":"List of enforcement requests"
               },
               "application_id":{
                  "title":"Application ID",
                  "type":"string"
               },
               "subject_id":{
                  "title":"Subject ID",
                  "type":"string",
                  "description":"Can be a email id or some normal subject identifier"
               }
            }
         },
         "PaginatedRRPList":{
            "title":"PaginatedRRPList",
            "required":[
               "policies"
            ],
            "type":"object",
            "properties":{
               "policies":{
                  "title":"Resource restriction policies",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourceRestrictionPolicyMetaData"
                  },
                  "description":"List of paginated resource restriction policies"
               },
               "pagination":{
                  "title":"Pagination",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Pagination"
                     }
                  ],
                  "description":"Pagination information for the role list",
                  "default":{
                     "offset":0,
                     "count_per_page":2000,
                     "total_count":0
                  }
               }
            },
            "description":"A paginated list of resource restriction policies"
         },
         "Pagination":{
            "title":"Pagination",
            "type":"object",
            "properties":{
               "offset":{
                  "title":"Offset",
                  "type":"integer",
                  "description":"Starting offset of the page",
                  "default":0
               },
               "count_per_page":{
                  "title":"Count Per Page",
                  "type":"integer",
                  "description":"Number of items returned on each page",
                  "default":2000
               },
               "total_count":{
                  "title":"Total Count",
                  "type":"integer",
                  "description":"Total number of items",
                  "default":0
               }
            }
         },
         "Permission":{
            "title":"Permission",
            "required":[
               "name",
               "slug"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The permission name"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name that identifies the permission",
                  "example":"my-app.foo.read"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"A longer text description of the permission"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__permission__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the permission"
               }
            },
            "description":"An application permission"
         },
         "PermissionComponent":{
            "title":"PermissionComponent",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name that identifies the permission",
                  "example":"my-app.foo.read"
               },
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The permission name"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"A longer text description of the permission"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__permission__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the permission"
               }
            },
            "description":"An application permission that is a component or child of an application resource"
         },
         "PermissionComponentSetUpdate":{
            "title":"PermissionComponentSetUpdate",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionComponent"
                  },
                  "description":"A list of permissions to add"
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionUpdate"
                  },
                  "description":"A list of permission update specifiers.\n\nThis should be a final list of ALL the permissions that are to be associated with the application resource.\n\nIf an application resource say AR1 previously had permissions say P1, P2, and P3 associated with it, but this update list only contains P2 and P3, then P1 will no longer be associated with AR1."
               }
            },
            "description":"Specifiers to update a set of component permissions"
         },
         "PermissionReference":{
            "title":"PermissionReference",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the permission",
                  "example":"my-app.foo.read"
               },
               "name":{
                  "title":"Permission Name",
                  "type":"string",
                  "description":"Permission name"
               }
            },
            "description":"Identifies a permission"
         },
         "PermissionSetUpdate":{
            "title":"PermissionSetUpdate",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Permission"
                  },
                  "description":"A list of permissions to add"
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionUpdate"
                  },
                  "description":"A list of permission update specificiers"
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"A list of permissions to delete.\n\nPermissions defined under an application resource can also be deleted using this.\n\nDeleting a permission will also remove its association with an application resource or role."
               }
            },
            "description":"Specifiers to update a set if permissions"
         },
         "PermissionUpdate":{
            "title":"PermissionUpdate",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the permission. This is an immutable identifier.",
                  "example":"my-app.foo.read"
               },
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"Sets the the permission name"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"Sets the permission description"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__permission__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the permission"
               }
            },
            "description":"Specifies an update to a permission"
         },
         "PredefinedRoleCreation":{
            "title":"PredefinedRoleCreation",
            "required":[
               "name",
               "resource_policies",
               "slug"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "maxLength":100,
                  "type":"string",
                  "description":"The role name"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"A longer text description of the role"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__role__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the role"
               },
               "resource_policies":{
                  "title":"Policies",
                  "minItems":1,
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourcePolicy"
                  },
                  "description":"List of resource policies"
               },
               "slug":{
                  "title":"Name",
                  "type":"string",
                  "description":"The slug or short name for the role"
               }
            },
            "description":"A role is a container of permission grants to resources that can be assigned to users as a unit.\nThis is the structure to create a predefined role.  It contains the role slug so that the\napplication creating the role can give it a well-known slug."
         },
         "RegistrationError":{
            "title":"RegistrationError",
            "required":[
               "error_type",
               "message"
            ],
            "type":"object",
            "properties":{
               "error_type":{
                  "title":"Error Type",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/RegistrationErrorType"
                     }
                  ],
                  "description":"The type of error or the type of the entity to which the error applies"
               },
               "item_id":{
                  "title":"Entity Id",
                  "type":"string",
                  "description":"The Id of the item (permission, role, etc.) causing the error, if applicable"
               },
               "message":{
                  "title":"Message",
                  "type":"string",
                  "description":"The error message"
               }
            },
            "description":"Details abount an application registration error"
         },
         "RegistrationErrorList":{
            "title":"RegistrationErrorList",
            "type":"object",
            "properties":{
               "errors":{
                  "title":"Errors",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RegistrationError"
                  },
                  "description":"List of processing errors if any"
               }
            },
            "description":"The errors encountered during application registration"
         },
         "RegistrationErrorType":{
            "title":"RegistrationErrorType",
            "enum":[
               "SYSTEM",
               "PERMISSION",
               "ROLE",
               "APP_RESOURCE",
               "SCOPE_RESOURCE",
               "APP_INSTANCE"
            ],
            "type":"string",
            "description":"The type of application registration error"
         },
         "ResourceMatcher":{
            "title":"ResourceMatcher",
            "required":[
               "matcher"
            ],
            "type":"object",
            "properties":{
               "matcher":{
                  "title":"Matcher",
                  "type":"string",
                  "description":"An expression that matches resource slugs",
                  "example":"/my-app/foo/*"
               },
               "name":{
                  "title":"Resource Matcher Name",
                  "type":"string",
                  "description":"Most relavant name for this resource slug matcher"
               }
            },
            "description":"Matches one or more resources using a pattern"
         },
         "ResourcePolicy":{
            "title":"ResourcePolicy",
            "required":[
               "resource",
               "permissions"
            ],
            "type":"object",
            "properties":{
               "resource":{
                  "title":"Resource Matcher",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ResourceMatcher"
                     }
                  ],
                  "description":"A pattern matching the slug identifiers of one or more resources",
                  "example":{
                     "matcher":"/my-app/foo/"
                  }
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionReference"
                  },
                  "description":"The permissions associated with the matched resources"
               },
               "effect":{
                  "title":"Effect",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Effect"
                     }
                  ],
                  "description":"The effect of the permissions on the resource, e.g. 'allow', 'deny'. Not all applications will use this feature."
               }
            }
         },
         "ResourcePolicySetUpdate":{
            "title":"ResourcePolicySetUpdate",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourcePolicy"
                  },
                  "description":"A list of policies to add to the policy set",
                  "default":[

                  ]
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourcePolicyUpdate"
                  },
                  "description":"A list of policies to replace existing policies. Policies are matched by the matcher value.",
                  "default":[

                  ]
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourceMatcher"
                  },
                  "description":"A list of resource matchers. Policies on each of the matchers are deleted from the policy set.",
                  "default":[

                  ]
               }
            },
            "description":"An update specification for a resource policy set"
         },
         "ResourcePolicyUpdate":{
            "title":"ResourcePolicyUpdate",
            "required":[
               "resource"
            ],
            "type":"object",
            "properties":{
               "resource":{
                  "title":"Resource Matcher",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ResourceMatcher"
                     }
                  ],
                  "description":"A pattern matching the slug identifiers of one or more resources"
               },
               "permissions":{
                  "title":"Permissions",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PermissionReference"
                  },
                  "description":"Sets the permissions associated with the matched resources"
               },
               "effect":{
                  "title":"Effect",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Effect"
                     }
                  ],
                  "description":"Sets the authentication policy effect, e.g. ALLOW or DENY."
               }
            }
         },
         "ResourceReference":{
            "title":"ResourceReference",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource",
                  "example":"/my-app/foo/bar"
               }
            },
            "description":"Identifies or refers to a resource"
         },
         "ResourceRestrictionPolicyInfo":{
            "title":"ResourceRestrictionPolicyInfo",
            "required":[
               "name",
               "resource_restriction_policy_id"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "maxLength":150,
                  "type":"string",
                  "description":"Name of the resource restriction policy"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"A longer text description about resource restriction policy"
               },
               "resource_restriction_policy_id":{
                  "title":"Auto generated Id",
                  "type":"string",
                  "format":"uuid"
               }
            },
            "description":"Model for complete rrp object\nThis Model only return rrp_id, name and description"
         },
         "ResourceRestrictionPolicyMetaData":{
            "title":"ResourceRestrictionPolicyMetaData",
            "required":[
               "name",
               "resource_restriction_policy_id",
               "platform_cid",
               "application_id"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "maxLength":150,
                  "type":"string",
                  "description":"Name of the resource restriction policy"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"A longer text description about resource restriction policy"
               },
               "resource_restriction_policy_id":{
                  "title":"Auto generated Id",
                  "type":"string",
                  "format":"uuid"
               },
               "platform_cid":{
                  "title":"Platform customer id",
                  "type":"string"
               },
               "application_id":{
                  "title":"Application id",
                  "type":"string"
               },
               "application_name":{
                  "title":"Application Name",
                  "type":"string",
                  "description":"Name of the application",
                  "default":""
               },
               "scope_resource_instances":{
                  "title":"Scope instances",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeInstance"
                  },
                  "description":"List of Scope instances for a particular policy",
                  "default":[

                  ]
               },
               "created_at":{
                  "title":"Created At Timestamp",
                  "type":"string",
                  "description":"Created At Timestamp in epoch seconds",
                  "format":"date-time"
               },
               "updated_at":{
                  "title":"Updated At Timestamp",
                  "type":"string",
                  "description":"Updated At Timestamp in epoch seconds",
                  "format":"date-time"
               }
            },
            "description":"Model for complete rrp object"
         },
         "ResourceRestrictionScopeInstanceUpdates":{
            "title":"ResourceRestrictionScopeInstanceUpdates",
            "type":"object",
            "properties":{
               "delete":{
                  "title":"Delete Scope Instances",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeInstanceDelete"
                  },
                  "description":"List of scope instance slugs to be deleted from the given RRP"
               },
               "add":{
                  "title":"Add Scope Instances",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeInstanceUpdate"
                  },
                  "description":"List of scope instances to be added to the given RRP"
               },
               "overwrite":{
                  "title":"Overwrite Scope Instances",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeInstanceUpdate"
                  },
                  "description":"List of scope instances to be overwritten"
               }
            },
            "description":"Model to add, delete and overwrite scope_instances for a given RRP"
         },
         "Role":{
            "title":"Role",
            "required":[
               "slug",
               "name",
               "resource_policies"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Name",
                  "type":"string",
                  "description":"The slug or short name for the role",
                  "example":"my-app.observer"
               },
               "name":{
                  "title":"Name",
                  "maxLength":100,
                  "type":"string",
                  "description":"The role name",
                  "example":"observer"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__role__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the role"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"A longer text description of the role",
                  "example":"Describes the role"
               },
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"Unique identifier of the application with which the role is associated",
                  "example":"c0b5194b-2e7b-4cd8-9b7c-1398351saa4"
               },
               "predefined":{
                  "title":"Predefined Role",
                  "type":"boolean",
                  "description":"Indicates whether or not this is a predefined role",
                  "default":false
               },
               "created_at":{
                  "title":"Created At Timestamp",
                  "type":"integer",
                  "description":"Created At Timestamp in epoch seconds"
               },
               "updated_at":{
                  "title":"Updated At Timestamp",
                  "type":"integer",
                  "description":"Updated At Timestamp in epoch seconds"
               },
               "resource_policies":{
                  "title":"Policies",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourcePolicy"
                  },
                  "description":"List of resource policies"
               },
               "application_name":{
                  "title":"Application Name",
                  "type":"string",
                  "description":"The name of the application",
                  "default":"",
                  "example":"Example Application"
               }
            },
            "description":"A role is a container of permission grants to resources that can be assigned to users as a unit.\nThis is the complete role definition including its slug."
         },
         "RoleAssignmentSummaryWithRRP":{
            "title":"RoleAssignmentSummaryWithRRP",
            "required":[
               "slug",
               "role_name"
            ],
            "type":"object",
            "properties":{
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"Unique identifier of the application with which the role is associated"
               },
               "application_name":{
                  "title":"Application Name",
                  "type":"string",
                  "description":"Name of the application",
                  "default":""
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"The slug or short name for the role"
               },
               "role_name":{
                  "title":"Role Name",
                  "type":"string",
                  "description":"The role name"
               },
               "role_description":{
                  "title":"Role Description",
                  "type":"string",
                  "description":"A longer text description of the role"
               },
               "access_rules":{
                  "title":"Access Rules",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__user__AccessRules"
                     }
                  ],
                  "description":"Controls which accounts (msp, tenants or both) the role is assigned to the user"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__role__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the role"
               },
               "resource_restriction_policies":{
                  "title":"resource_restriction_policies",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ResourceRestrictionPolicyInfo"
                  },
                  "description":"The resource_restriction_policies info assigned to the role",
                  "default":[

                  ]
               }
            },
            "description":"Summary of a single role assignment for display on the assignments landing page"
         },
         "RoleItemUpgrade":{
            "title":"RoleItemUpgrade",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "maxLength":100,
                  "type":"string",
                  "description":"Sets the role name"
               },
               "description":{
                  "title":"Description",
                  "maxLength":256,
                  "type":"string",
                  "description":"Sets the role description"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__role__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the role"
               },
               "resource_policies":{
                  "title":"Policies",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ResourcePolicySetUpdate"
                     }
                  ],
                  "description":"Update specification for the role's resource policies"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"The slug or short name identifying the role to be updated"
               }
            },
            "description":"A specification to upgrade an existing role.\nThe role is identified by slug.  The role's name and description may be optionally changed.\nPolicies may be added, deleted and replaced in the role."
         },
         "RoleReference":{
            "title":"RoleReference",
            "required":[
               "application_id"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"The mandatory slug or short name of the role applicable for all APIs excluding Internal Apis."
               },
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"Unique identifier of th eapplication with which the role is associated"
               },
               "name":{
                  "title":"Name",
                  "maxLength":100,
                  "type":"string",
                  "description":"The name of the role only applicable for Internal APIs"
               }
            },
            "description":"Identifies a role.\nNote: Both slug and name can't be optional together."
         },
         "RoleUpgrade":{
            "title":"RoleUpgrade",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PredefinedRoleCreation"
                  },
                  "description":"A list of roles to add"
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RoleItemUpgrade"
                  },
                  "description":"A list of role update specifiers"
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"List of roles to delete"
               }
            },
            "description":"A role upgrade specification.\nNew roles may be added or existing roles updated.  Existing roles are identified by slug."
         },
         "ScopeInstance":{
            "title":"ScopeInstance",
            "required":[
               "name",
               "slug",
               "application_cid"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The resource name"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource",
                  "example":"/my-app/foo/bar"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"A longer text description of the resource"
               },
               "application_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier"
               },
               "application_cid":{
                  "title":"Application Customer ID",
                  "type":"string",
                  "description":"Unique Identifier of an application customer"
               },
               "type":{
                  "title":"Type",
                  "type":"string",
                  "description":"Type refers to resource.resource_slug to which the scope instance belongs",
                  "example":"/my-app/foo"
               },
               "scope_type_name":{
                  "title":"Scope Type Name",
                  "type":"string",
                  "description":"Name of scope resource/type",
                  "example":"app fa6 site-management"
               }
            },
            "description":"A scope instance Model to group under resource restriction policy for an Application"
         },
         "ScopeInstanceDelete":{
            "title":"ScopeInstanceDelete",
            "required":[
               "slug",
               "application_instance_id"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the scope instance",
                  "example":"/my-app/foo/*"
               },
               "application_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier"
               }
            }
         },
         "ScopeInstanceUpdate":{
            "title":"ScopeInstanceUpdate",
            "required":[
               "name",
               "slug",
               "application_instance_id"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The scope instance name"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the scope instance",
                  "example":"/my-app/foo/*"
               },
               "application_instance_id":{
                  "title":"Application Instance Id",
                  "type":"string",
                  "description":"The application instance unique identifier"
               },
               "type":{
                  "title":"Type",
                  "type":"string",
                  "description":"Type refers to resource.resource_slug to which the scope instance belongs",
                  "example":"/my-app/foo"
               }
            }
         },
         "ScopeResource":{
            "title":"ScopeResource",
            "required":[
               "name",
               "slug"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"The resource name"
               },
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource",
                  "example":"/my-app/foo/bar"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"A longer text description of the resource"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__resource__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the resource"
               },
               "broker_url":{
                  "title":"Broker URL",
                  "type":"string",
                  "description":"Relative path to the application instance broker endpoint. Omit the scheme, host and port as those were captured during application instance onboarding.",
                  "example":"/app-service/broker/v1/"
               }
            },
            "description":"A scope resource type definition"
         },
         "ScopeResourceInstanceAssignment":{
            "title":"ScopeResourceInstanceAssignment",
            "required":[
               "matcher",
               "application_cid"
            ],
            "type":"object",
            "properties":{
               "matcher":{
                  "title":"Matcher",
                  "type":"string",
                  "description":"An expression that matches resource slugs",
                  "example":"/my-app/foo/*"
               },
               "name":{
                  "title":"Resource Matcher Name",
                  "type":"string",
                  "description":"Most relavant name for this resource slug matcher"
               },
               "application_cid":{
                  "title":"Application Customer Id",
                  "type":"string",
                  "description":"Identifies the application customer that owns the scope resource instance"
               },
               "application_instance_id":{
                  "title":"Application instance Id",
                  "type":"string",
                  "description":"Identifies the application instance of the application customer"
               }
            },
            "description":"A scope resource instance assignment that occurs along with a role assignment to a user.\nContains a matcher expression that matches one or more scope resource instances\nand the application customer that owns those scope resources."
         },
         "ScopeResourceUpdate":{
            "title":"ScopeResourceUpdate",
            "required":[
               "slug"
            ],
            "type":"object",
            "properties":{
               "slug":{
                  "title":"Slug",
                  "type":"string",
                  "description":"A slug or abbreviated name for the resource. This is an immutable identifier.",
                  "example":"/my-app/foo/bar"
               },
               "name":{
                  "title":"Name",
                  "type":"string",
                  "description":"Sets the resource name"
               },
               "description":{
                  "title":"Description",
                  "type":"string",
                  "description":"Sets the resource description"
               },
               "tags":{
                  "title":"Tags",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__resource__Tags"
                     }
                  ],
                  "description":"Tag values to associate with the resource"
               },
               "broker_url":{
                  "title":"Broker URL",
                  "type":"string",
                  "description":"Relative path to the application instance broker endpoint. Omit the scheme, host and port as those were captured during application instance onboarding.",
                  "example":"/app-service/broker/v1/"
               }
            },
            "description":"Specifies an update to a scope resource type definition"
         },
         "ScopeResourceUpgrade":{
            "title":"ScopeResourceUpgrade",
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeResource"
                  },
                  "description":"A list of scope resources to add"
               },
               "update":{
                  "title":"Update",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeResourceUpdate"
                  },
                  "description":"A list of scope resource update specifiers"
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"A list of scope resource slugs"
               }
            },
            "description":"A scope resource upgrade specification."
         },
         "Status":{
            "title":"Status",
            "enum":[
               "HEALTHY",
               "UNHEALTHY"
            ],
            "type":"string",
            "description":"Service status enumeration can indicate whether service is healthy or unhealthy"
         },
         "StatusResponse":{
            "title":"StatusResponse",
            "required":[
               "status",
               "summary"
            ],
            "type":"object",
            "properties":{
               "status":{
                  "title":"Status",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Status"
                     }
                  ],
                  "description":"The service status"
               },
               "summary":{
                  "title":"Summary",
                  "type":"string",
                  "description":"Extra information about the service status"
               }
            },
            "description":"Response from the service status endpoint"
         },
         "Subject":{
            "title":"Subject",
            "required":[
               "subject_id",
               "subject_type"
            ],
            "type":"object",
            "properties":{
               "subject_id":{
                  "title":"Subject Id",
                  "type":"string",
                  "description":"Subject Id"
               },
               "subject_type":{
                  "title":"Subject Type",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/SubjectType"
                     }
                  ],
                  "description":"Subject Type"
               }
            }
         },
         "SubjectAccessibleResourceFilter":{
            "title":"SubjectAccessibleResourceFilter",
            "required":[
               "resource_filters",
               "subject_id",
               "application_id"
            ],
            "type":"object",
            "properties":{
               "resource_filters":{
                  "title":"Resource Filters",
                  "minItems":1,
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/GetUserAccessibleResourcesFilterItem"
                  },
                  "description":"A list of resource filters. User policies matching any filter in the list will be returned."
               },
               "subject_id":{
                  "title":"Subject Id",
                  "type":"string",
                  "description":"Identifies the subject"
               },
               "exclude_scope_resources":{
                  "title":"Exclude Scope Resources",
                  "type":"boolean",
                  "description":"Indicates whether or not to exclude scope resources in the response",
                  "default":false
               },
               "exclude_denies":{
                  "title":"Exclude Denies",
                  "type":"boolean",
                  "description":"Indicates whether or not to exclude resources and permissions that have been denied the subject in the response",
                  "default":false
               },
               "application_id":{
                  "title":"Application Id",
                  "type":"string",
                  "description":"The application's unique identifier"
               }
            },
            "description":"The filter for the get subject accessible resources API.\n\nThe resource_filters list may contain many filter items.  Many items are combined\nwith a logical OR.  Subject resource policies matching any filter item in the list\nwill be returned.",
            "example":{
               "subject_id":"david@hpe.com",
               "exclude_scope_resources":"false",
               "exclude_denies":"false",
               "application_id":"46f7d8b4-d8e2-4ef5-891d-437eecdf819b",
               "resource_filters":[
                  {
                     "application_resource":"/test-app/baz"
                  },
                  {
                     "application_resource":"/test-app/bar",
                     "permissions":[
                        "test-app.bar.read"
                     ]
                  },
                  {
                     "application_resource":"/test-app/foo",
                     "permissions":[
                        "test-app.foo.read",
                        "test-app.foo.write"
                     ],
                     "scope_resource_instances":[
                        "/test-app/doodads/part1",
                        "/test-app/gizmos/*"
                     ]
                  }
               ]
            }
         },
         "SubjectAssignmentSummaryWithRRP":{
            "title":"SubjectAssignmentSummaryWithRRP",
            "required":[
               "subject_id",
               "subject_type"
            ],
            "type":"object",
            "properties":{
               "subject_id":{
                  "title":"Subject Id",
                  "type":"string",
                  "description":"Subject Id"
               },
               "subject_type":{
                  "title":"Subject Type",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/SubjectType"
                     }
                  ],
                  "description":"Subject Type"
               },
               "roles":{
                  "title":"Roles Summary",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RoleAssignmentSummaryWithRRP"
                  },
                  "description":"List of roles that have been assigned to the subject",
                  "default":[

                  ]
               }
            }
         },
         "SubjectRoleAssignment":{
            "title":"SubjectRoleAssignment",
            "required":[
               "role"
            ],
            "type":"object",
            "properties":{
               "role":{
                  "title":"Role",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/OrgRoleReference"
                     }
                  ],
                  "description":"Identifies a role"
               },
               "access_rules":{
                  "title":"Access Rules",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__subject__AccessRules"
                     }
                  ],
                  "description":"Controls which accounts (msp, tenants or both) the role is assigned to the user"
               },
               "resource_restriction_policies":{
                  "title":"Resource Restriction Policies",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"List of the resource restriction policies Id for the assignment. For now, we only support one Id."
               }
            },
            "description":"A user role assignment\nContains the identity of a role to assign to a user along with\nthe optional scope resource instances to apply to the role policies."
         },
         "SubjectRoleUpdates":{
            "title":"SubjectRoleUpdates",
            "required":[
               "subject"
            ],
            "type":"object",
            "properties":{
               "add":{
                  "title":"Add",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/SubjectRoleAssignment"
                  },
                  "description":"A list of role and associated scopes to assign to the subject"
               },
               "delete":{
                  "title":"Delete",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/RoleReference"
                  },
                  "description":"A list of role identifiers to remove or unassign from the subject"
               },
               "overwrite":{
                  "title":"Overwrite",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/SubjectRoleAssignment"
                  },
                  "description":"A list of subject - role assignment overwrite specifications"
               },
               "subject":{
                  "title":"Subject",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Subject"
                     }
                  ],
                  "description":"The subject to associate with the roles"
               }
            },
            "description":"A bulk update specification for the role and scope assignments to a subject"
         },
         "SubjectType":{
            "title":"SubjectType",
            "enum":[
               "USER",
               "API"
            ],
            "type":"string",
            "description":"An enumeration."
         },
         "UserApplicationRoleAssignment":{
            "title":"UserApplicationRoleAssignment",
            "required":[
               "application",
               "roles"
            ],
            "type":"object",
            "properties":{
               "application":{
                  "title":"Application",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ApplicationReference"
                     }
                  ],
                  "description":"Identifies the application"
               },
               "roles":{
                  "title":"Roles",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/UserRoleAssignment"
                  },
                  "description":"The roles assigned to the user in this application"
               }
            },
            "description":"All of a user's role and scope assignments in an application"
         },
         "UserRoleAssignment":{
            "title":"UserRoleAssignment",
            "required":[
               "role"
            ],
            "type":"object",
            "properties":{
               "role":{
                  "title":"Role",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/RoleReference"
                     }
                  ],
                  "description":"Identifies a role"
               },
               "access_rules":{
                  "title":"Access Rules",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/hpe_ccs_authz__models__user__AccessRules"
                     }
                  ],
                  "description":"Controls which accounts (msp, tenants or both) the role is assigned to the user"
               },
               "scope_resource_instances":{
                  "title":"Scopes",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ScopeResourceInstanceAssignment"
                  },
                  "description":"The scope resource instances to which the role policies shall apply"
               },
               "resource_restriction_policies":{
                  "title":"Resource Restriction Policies",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"The resource restriction policies to which the role policies shall apply"
               }
            },
            "description":"A user role assignment\nContains the identity of a role to assign to a user along with\nthe optional scope resource instances to apply to the role policies."
         },
         "UsersAssociatedWithScope":{
            "title":"UsersAssociatedWithScope",
            "required":[
               "scope_resource_instance"
            ],
            "type":"object",
            "properties":{
               "scope_resource_instance":{
                  "title":"Scope resource",
                  "type":"string",
                  "description":"Instance of the scope resource"
               },
               "user_ids":{
                  "title":"user identification",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"List of user_ids"
               }
            }
         },
         "ValidationError":{
            "title":"ValidationError",
            "required":[
               "loc",
               "msg",
               "type"
            ],
            "type":"object",
            "properties":{
               "loc":{
                  "title":"Location",
                  "type":"array",
                  "items":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"integer"
                        }
                     ]
                  }
               },
               "msg":{
                  "title":"Message",
                  "type":"string"
               },
               "type":{
                  "title":"Error Type",
                  "type":"string"
               }
            }
         },
         "hpe_ccs_authz__models__permission__Tags":{
            "title":"Tags",
            "type":"object",
            "properties":{
               "hidden":{
                  "title":"hidden tag",
                  "type":"boolean",
                  "description":"permission should be hidden"
               },
               "mandatory":{
                  "title":"mandatory permission",
                  "type":"boolean",
                  "description":"permission is mandatory for the role"
               },
               "default":{
                  "title":"default permission",
                  "type":"boolean",
                  "description":"Default permission to be assigned to a role"
               },
               "level":{
                  "title":"level",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/LevelType"
                     }
                  ],
                  "description":"permission belongs to this level"
               }
            }
         },
         "hpe_ccs_authz__models__resource__Tags":{
            "title":"Tags",
            "type":"object",
            "properties":{
               "hidden":{
                  "title":"hidden tag",
                  "type":"boolean",
                  "description":"resource should be hidden"
               },
               "mandatory":{
                  "title":"Mandatory tag",
                  "type":"boolean",
                  "description":"This resource mandates permission to be set during custom role creation"
               },
               "level":{
                  "title":"organization level",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/LevelType"
                     }
                  ],
                  "description":"resource belongs to this level"
               },
               "programs":{
                  "title":"list of programs",
                  "type":"array",
                  "items":{
                     "type":"string"
                  },
                  "description":"list of programs supported for the customer. Ex: storage_beta, compute_beta"
               }
            }
         },
         "hpe_ccs_authz__models__role__Tags":{
            "title":"Tags",
            "type":"object",
            "properties":{
               "hidden":{
                  "title":"hidden role",
                  "type":"boolean",
                  "description":"role should be hidden"
               },
               "tac":{
                  "title":"tac role",
                  "type":"boolean",
                  "description":"role is a tac role"
               },
               "activate":{
                  "title":"activate role",
                  "type":"boolean",
                  "description":"role is an activate-specfic role"
               },
               "ccs":{
                  "title":"ccs role",
                  "type":"boolean",
                  "description":"role is a regular ccs role"
               },
               "default":{
                  "title":"default role",
                  "type":"boolean",
                  "description":"Default role to be assigned to a user when the application is being provisioned"
               },
               "no_default_rrp":{
                  "title":"no default restriction policy",
                  "type":"boolean",
                  "description":"if true, NA scope will be assigned during app provisioning, else, AllScopes"
               },
               "level":{
                  "title":"level",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/LevelType"
                     }
                  ],
                  "description":"role belongs to this level"
               },
               "readonly":{
                  "title":"determines if user could change the role",
                  "type":"boolean",
                  "description":"if true, user will not be able to change a role"
               }
            }
         },
         "hpe_ccs_authz__models__subject__AccessRules":{
            "title":"AccessRules",
            "type":"object",
            "properties":{
               "msp":{
                  "title":"Access Rule msp",
                  "type":"boolean",
                  "description":"Role should be assigned to msp"
               },
               "tenants":{
                  "title":"Access Rule tenants",
                  "uniqueItems":true,
                  "type":"array",
                  "items":{
                     "anyOf":[
                        {
                           "enum":[
                              "ALL"
                           ],
                           "type":"string"
                        },
                        {
                           "type":"string"
                        }
                     ]
                  },
                  "description":"Role should be assigned to a set of tenants or ALL tenants"
               }
            }
         },
         "hpe_ccs_authz__models__user__AccessRules":{
            "title":"AccessRules",
            "type":"object",
            "properties":{
               "msp":{
                  "title":"Access Rule msp",
                  "type":"boolean",
                  "description":"Role should be assigned to msp"
               },
               "tenants":{
                  "title":"Access Rule tenants",
                  "uniqueItems":true,
                  "type":"array",
                  "items":{
                     "anyOf":[
                        {
                           "enum":[
                              "ALL"
                           ],
                           "type":"string"
                        },
                        {
                           "type":"string"
                        }
                     ]
                  },
                  "description":"Role should be assigned to a set of tenants or ALL tenants"
               }
            }
         }
      }
   },
   "x-tagGroups":[
      {
         "name":"Authz Customer Facing API",
         "tags":[
            "app-instance-on-boarding",
            "app-instance-application-upgrade",
            "app-instance-application-metadata",
            "app-instance-enforcement",
            "app-instance-resource",
            "app-instance-scope-resource",
            "app-instance-assignments"
         ]
      },
      {
         "name":"Authz Organizations Facing API",
         "tags":[
            "organizations-on-boarding",
            "organizations-application-upgrade",
            "organizations-application-metadata",
            "organizations-enforcement",
            "organizations-resource",
            "organizations-scope-resource",
            "organizations-assignments",
            "organizations-resource-restriction"
         ]
      }
   ],
   "tags":[
      {
         "name":"organizations-enforcement",
         "description":"Operations that organizations service can use to enforce subject actions on resources",
         "x-displayName":"Policy Enforcement"
      },
      {
         "name":"organizations-resource",
         "description":"Operations that organizations service can use to manage resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"organizations-scope-resource",
         "description":"Operations that organizations service can use to manage scope resource instances",
         "x-displayName":"Scope Resource Management"
      },
      {
         "name":"organizations-assignments",
         "description":"Operations that organizations service can use to manage subject authorization policies",
         "x-displayName":"Subject Management"
      },
      {
         "name":"organizations-resource-restriction",
         "description":"Operations that organizations service can use to manage resource restriction policy",
         "x-displayName":"Resource Restriction Policy Management"
      },
      {
         "name":"organizations-role",
         "description":"Operations that organizations service can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"organizations-application-metadata",
         "description":"Operations that organizations service can use to manage authorization metadata",
         "x-displayName":"Metadata Management"
      },
      {
         "name":"organizations-application-upgrade",
         "description":"Operations that organizations service can use to upgrade authorization metadata",
         "x-displayName":"Application Instance Upgrade"
      },
      {
         "name":"organizations-on-boarding",
         "description":"Operations that organizations service can use to on-board authorization metadata",
         "x-displayName":"Application Instance On-Boarding"
      },
      {
         "name":"app-instance-application-metadata",
         "description":"Operations that applications can use to manage authorization metadata",
         "x-displayName":"Metadata Management"
      },
      {
         "name":"app-instance-application-upgrade",
         "description":"Operations that applications can use to upgrade authorization metadata",
         "x-displayName":"Application Instance Upgrade"
      },
      {
         "name":"app-instance-enforcement",
         "description":"Operations that applications can use to enforce user actions on resources",
         "x-displayName":"Policy Enforcement"
      },
      {
         "name":"app-instance-on-boarding",
         "description":"Operations that applications can use to on-board authorization metadata",
         "x-displayName":"Application Instance On-Boarding"
      },
      {
         "name":"app-instance-permissions",
         "description":"Operations that applications can use to manage permissions",
         "x-displayName":"Permission Management"
      },
      {
         "name":"app-instance-resource",
         "description":"Operations that applications can use to manage resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"app-instance-scope-resource",
         "description":"Operations that applications can use to manage scope resource instances",
         "x-displayName":"Scope Resource Management"
      },
      {
         "name":"app-instance-role",
         "description":"Operations that applications can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"app-instance-assignments",
         "description":"Operations that applications can use to manage user authorization policies",
         "x-displayName":"User Management"
      },
      {
         "name":"app-instance-resource-restriction",
         "description":"Operations that applications can use to manage resource restriction policy",
         "x-displayName":"Resource Restriction Policy Management"
      },
      {
         "name":"external-application-metadata",
         "description":"Operations that external customers can use to manage authorization metadata",
         "x-displayName":"Metadata Management"
      },
      {
         "name":"external-enforcement",
         "description":"Operations that external customers can use to enforce user actions on resources",
         "x-displayName":"Policy Enforcement"
      },
      {
         "name":"external-permissions",
         "description":"Operations that external customers can use to manage permissions",
         "x-displayName":"Permission Management"
      },
      {
         "name":"external-resource",
         "description":"Operations that external customers can use to manage resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"external-role",
         "description":"Operations that external customers can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"external-user",
         "description":"Operations that external customers can use to manage user authorization policies",
         "x-displayName":"User Management"
      },
      {
         "name":"internal-application-metadata",
         "description":"Operations that CCS services can use to manage authorization metadata",
         "x-displayName":"Metadata Management"
      },
      {
         "name":"internal-application-upgrade",
         "description":"Operations that CCS services can use to upgrade authorization metadata",
         "x-displayName":"Application Instance Upgrade"
      },
      {
         "name":"internal-enforcement",
         "description":"Operations that CCS services can use to enforce user actions on resources",
         "x-displayName":"Policy Enforcement"
      },
      {
         "name":"internal-on-boarding",
         "description":"Operations that CCS services can use to on-board authorization metadata",
         "x-displayName":"Application Instance On-Boarding"
      },
      {
         "name":"internal-permissions",
         "description":"Operations that CCS services can use to manage permissions",
         "x-displayName":"Permission Management"
      },
      {
         "name":"internal-resource",
         "description":"Operations that CCS services can use to manage resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"internal-role",
         "description":"Operations that CCS services can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"internal-user",
         "description":"Operations that CCS Services can use to manage user authorization policies",
         "x-displayName":"User Management"
      },
      {
         "name":"internal-resource-restriction",
         "description":"Operations that CCS Services can use to manage resource restriction policies",
         "x-displayName":"Resource Restriction Management"
      },
      {
         "name":"internal-jobs",
         "description":"Operations that CCS services can use to manage jobs",
         "x-displayName":"Jobs Management"
      },
      {
         "name":"webui-application-metadata",
         "description":"Operations that the CCS UI can use to manage authorization metadata",
         "x-displayName":"Metadata Management"
      },
      {
         "name":"webui-enforcement",
         "description":"Operations that the CCS UI can use to enforce user actions on resources",
         "x-displayName":"Policy Enforcement"
      },
      {
         "name":"webui-permissions",
         "description":"Operations that the CCS UI can use to manage permissions",
         "x-displayName":"Permission Management"
      },
      {
         "name":"webui-resource",
         "description":"Operations that the CCS UI can use to manage resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"webui-role",
         "description":"Operations that the CCS UI can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"webui-resource-restriction",
         "description":"Operations that the CCS UI can use to manage resource restriction policy",
         "x-displayName":"Resource Restriction Policy Management"
      },
      {
         "name":"webui-user",
         "description":"Operations that the CCS UI can use to manage user authorization policies",
         "x-displayName":"User Management"
      },
      {
         "name":"webui-v2-user",
         "description":"Operations that the CCS UI can use to manage user authorization policies",
         "x-displayName":"User Management"
      },
      {
         "name":"app-broker",
         "description":"Operations that must be implemented by applications that integrate with the Authorization service",
         "x-displayName":"Application Broker"
      },
      {
         "name":"health",
         "description":"Operations to check service health",
         "x-displayName":"Health Check"
      },
      {
         "name":"ccs-tools",
         "description":"Operations performed internally that are specific to Authorization service",
         "x-displayName":"CCS Tools"
      },
      {
         "name":"internal-v2-resource",
         "description":"Operations that the CCS service can use to manage v2 resources",
         "x-displayName":"Resource Management"
      },
      {
         "name":"internal-v2-role",
         "description":"Operations that CCS services can use to manage roles",
         "x-displayName":"Role Management"
      },
      {
         "name":"internal-v2-user",
         "description":"Operations that the CCS service can use to manage v2 users",
         "x-displayName":"User Management"
      }
   ]
}