{
    "openapi": "3.0.1",
    "info": {
        "title": "Account Management",
        "description": "This Document outlines the API contracts for HPE Common Cloud Services",
        "version": "1.0.0"
    },
    "paths": {
        "/accounts/app/v1/customers/platform/{platform_customer_id}": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Platform Workspace",
                "description": "Get platform workspace profile and contact details.",
                "operationId": "get_platform_customer_all_details_accounts_app_v1_customers_platform__platform_customer_id__get",
                "parameters": [
                    {
                        "description": "Retrieve a workspace based on the platform customer id",
                        "required": true,
                        "schema": {
                            "title": "Platform Customer ID",
                            "type": "string",
                            "description": "Retrieve a workspace based on the platform customer id"
                        },
                        "name": "platform_customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.customer:{customer_id}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 86400",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerEvent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Platform Workspaces",
                "description": "Get filtered platform workspaces.",
                "operationId": "get_filtered_platform_customers_accounts_app_v1_customers_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 5000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the company name",
                        "required": false,
                        "schema": {
                            "title": "Company Name",
                            "type": "string",
                            "description": "Filter by the company name"
                        },
                        "name": "company_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the Region",
                        "required": false,
                        "schema": {
                            "title": "Region",
                            "type": "string",
                            "description": "Filter by the Region"
                        },
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "description": "Filter by workspaces created by this user",
                        "required": false,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by workspaces created by this user"
                        },
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "description": "Filter by username/email address of an associated user.",
                        "required": false,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by username/email address of an associated user."
                        },
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the a particular email domain.",
                        "required": false,
                        "schema": {
                            "title": "Email Domain",
                            "type": "string",
                            "description": "Filter by the a particular email domain."
                        },
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the MSP ID.",
                        "required": false,
                        "schema": {
                            "title": "MSP ID",
                            "type": "string",
                            "description": "Filter by the MSP ID."
                        },
                        "name": "msp_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the workspace status",
                        "required": false,
                        "schema": {
                            "title": "Workspace Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountStatus"
                                }
                            ],
                            "description": "Filter by the workspace status"
                        },
                        "name": "account_status",
                        "in": "query"
                    },
                    {
                        "description": "Workspaces where this application was provisioned",
                        "required": false,
                        "schema": {
                            "title": "Application id",
                            "type": "string",
                            "description": "Workspaces where this application was provisioned"
                        },
                        "name": "application_id",
                        "in": "query"
                    },
                    {
                        "description": "Workspaces where this application instance was provisioned",
                        "required": false,
                        "schema": {
                            "title": "Application instance id",
                            "type": "string",
                            "description": "Workspaces where this application instance was provisioned"
                        },
                        "name": "application_instance_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by workspace type.",
                        "required": false,
                        "schema": {
                            "title": "Workspaces Type",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountType"
                                }
                            ],
                            "description": "Filter the platform workspaces by workspace type."
                        },
                        "name": "account_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform customer by STANDALONE or MSP.",
                        "required": false,
                        "schema": {
                            "title": "Discard Tenants from the results",
                            "type": "boolean",
                            "description": "Filter the platform customer by STANDALONE or MSP."
                        },
                        "name": "ignore_tenants",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by Search fields.",
                        "required": false,
                        "schema": {
                            "title": "Workspace Search String",
                            "type": "string",
                            "description": "Filter the platform workspaces by Search fields."
                        },
                        "name": "search_string",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by Search fields.",
                        "required": false,
                        "schema": {
                            "title": "Workspace Search fields for Search String",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountSearchFields"
                                }
                            ],
                            "description": "Filter the platform workspaces by Search fields."
                        },
                        "name": "search_fields",
                        "in": "query"
                    },
                    {
                        "description": "Results sent with sort by RECENT or ALPHABETIC.",
                        "required": false,
                        "schema": {
                            "title": "Sort the results of workspaces",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountSortBy"
                                }
                            ],
                            "description": "Results sent with sort by RECENT or ALPHABETIC."
                        },
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "description": "Start time for Search by Time of Application Created At",
                        "required": false,
                        "schema": {
                            "title": "Application instance created at start time",
                            "type": "integer",
                            "description": "Start time for Search by Time of Application Created At"
                        },
                        "name": "application_instance_deployed_at_start",
                        "in": "query"
                    },
                    {
                        "description": "End time for Search by Time of Application Created At",
                        "required": false,
                        "schema": {
                            "title": "Application instance created at end time",
                            "type": "integer",
                            "description": "End time for Search by Time of Application Created At"
                        },
                        "name": "application_instance_deployed_at_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerEventPaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/ids": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Platform Workspace IDs",
                "description": "Get the customer IDs of wokrspaces.",
                "operationId": "get_filtered_platform_cids_accounts_app_v1_customers_ids_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 5000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the company name",
                        "required": false,
                        "schema": {
                            "title": "Company Name",
                            "type": "string",
                            "description": "Filter by the company name"
                        },
                        "name": "company_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the Region",
                        "required": false,
                        "schema": {
                            "title": "Region",
                            "type": "string",
                            "description": "Filter by the Region"
                        },
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "description": "Filter by workspaces created by this user",
                        "required": false,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by workspaces created by this user"
                        },
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "description": "Filter by username/email address of an associated user.",
                        "required": false,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by username/email address of an associated user."
                        },
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the a particular email domain.",
                        "required": false,
                        "schema": {
                            "title": "Email Domain",
                            "type": "string",
                            "description": "Filter by the a particular email domain."
                        },
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the MSP ID.",
                        "required": false,
                        "schema": {
                            "title": "MSP ID",
                            "type": "string",
                            "description": "Filter by the MSP ID."
                        },
                        "name": "msp_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the workspace status",
                        "required": false,
                        "schema": {
                            "title": "Workspace Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountStatus"
                                }
                            ],
                            "description": "Filter by the workspace status"
                        },
                        "name": "account_status",
                        "in": "query"
                    },
                    {
                        "description": "Workspaces where this application was provisioned",
                        "required": false,
                        "schema": {
                            "title": "Application id",
                            "type": "string",
                            "description": "Workspaces where this application was provisioned"
                        },
                        "name": "application_id",
                        "in": "query"
                    },
                    {
                        "description": "Workspaces where this application instance was provisioned",
                        "required": false,
                        "schema": {
                            "title": "Application instance id",
                            "type": "string",
                            "description": "Workspaces where this application instance was provisioned"
                        },
                        "name": "application_instance_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by workspace type.",
                        "required": false,
                        "schema": {
                            "title": "Workspaces Type",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountType"
                                }
                            ],
                            "description": "Filter the platform workspaces by workspace type."
                        },
                        "name": "account_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform customer by STANDALONE or MSP.",
                        "required": false,
                        "schema": {
                            "title": "Discard Tenants from the results",
                            "type": "boolean",
                            "description": "Filter the platform customer by STANDALONE or MSP."
                        },
                        "name": "ignore_tenants",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by Search fields.",
                        "required": false,
                        "schema": {
                            "title": "Workspace Search String",
                            "type": "string",
                            "description": "Filter the platform workspaces by Search fields."
                        },
                        "name": "search_string",
                        "in": "query"
                    },
                    {
                        "description": "Filter the platform workspaces by Search fields.",
                        "required": false,
                        "schema": {
                            "title": "Workspace Search fields for Search String",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountSearchFields"
                                }
                            ],
                            "description": "Filter the platform workspaces by Search fields."
                        },
                        "name": "search_fields",
                        "in": "query"
                    },
                    {
                        "description": "Results sent with sort by RECENT or ALPHABETIC.",
                        "required": false,
                        "schema": {
                            "title": "Sort the results of workspaces",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountSortBy"
                                }
                            ],
                            "description": "Results sent with sort by RECENT or ALPHABETIC."
                        },
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "description": "Start time for Search by Time of Application Created At",
                        "required": false,
                        "schema": {
                            "title": "Application instance created at start time",
                            "type": "integer",
                            "description": "Start time for Search by Time of Application Created At"
                        },
                        "name": "application_instance_deployed_at_start",
                        "in": "query"
                    },
                    {
                        "description": "End time for Search by Time of Application Created At",
                        "required": false,
                        "schema": {
                            "title": "Application instance created at end time",
                            "type": "integer",
                            "description": "End time for Search by Time of Application Created At"
                        },
                        "name": "application_instance_deployed_at_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerIdPaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/provisions": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Application workspaces",
                "description": "Get filtered application workspaces",
                "operationId": "get_application_customer_accounts_accounts_app_v1_customers_provisions_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 5000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by platform customer ID.",
                        "required": false,
                        "schema": {
                            "title": "Platform Customer ID",
                            "type": "string",
                            "description": "Filter the application workspaces by platform customer ID."
                        },
                        "name": "platform_customer_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by region.",
                        "required": false,
                        "schema": {
                            "title": "Region",
                            "type": "string",
                            "description": "Filter the application workspaces by region."
                        },
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by username (email address) of an associated user.",
                        "required": false,
                        "schema": {
                            "title": "Username",
                            "type": "string",
                            "description": "Filter the application workspaces by username (email address) of an associated user."
                        },
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the MSP ID.",
                        "required": false,
                        "schema": {
                            "title": "MSP ID",
                            "type": "string",
                            "description": "Filter by the MSP ID."
                        },
                        "name": "msp_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the application workspaces by application ID.",
                        "required": false,
                        "schema": {
                            "title": "Application ID",
                            "type": "string",
                            "description": "Filter by the application workspaces by application ID."
                        },
                        "name": "application_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by application instance ID.",
                        "required": false,
                        "schema": {
                            "title": "Application Instance ID",
                            "type": "string",
                            "description": "Filter the application workspaces by application instance ID."
                        },
                        "name": "application_instance_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by provision status.",
                        "required": false,
                        "schema": {
                            "title": "Provision Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProvisionStatus"
                                }
                            ],
                            "description": "Filter the application workspaces by provision status."
                        },
                        "name": "provision_status",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by workspace type.",
                        "required": false,
                        "schema": {
                            "title": "Workspace Type",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AccountType"
                                }
                            ],
                            "description": "Filter the application workspaces by workspace type."
                        },
                        "name": "account_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter the application workspaces by MSP conversion status.",
                        "required": false,
                        "schema": {
                            "title": "MSP Conversion Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/MspConversionStatus"
                                }
                            ],
                            "description": "Filter the application workspaces by MSP conversion status."
                        },
                        "name": "msp_conversion_status",
                        "in": "query"
                    },
                    {
                        "description": "Order of sorting response based on time of creation of application customer",
                        "required": false,
                        "schema": {
                            "title": "Order of sorting response based on time of creation of application customer",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SortFields"
                                }
                            ],
                            "description": "Order of sorting response based on time of creation of application customer",
                            "default": "ASCENDING"
                        },
                        "name": "sorting",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Ccs-Proxy-Cache-Key",
                            "type": "string"
                        },
                        "name": "ccs-proxy-cache-key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.provisioned:pcid:{platform_customer_id}:acid:{application_customer_id}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 604800",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerProvisionPaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/provisions/{application_customer_id}": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Application Workspace",
                "description": "Get an application workspace.",
                "operationId": "get_application_customer_account_accounts_app_v1_customers_provisions__application_customer_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Application Customer ID",
                            "type": "string"
                        },
                        "name": "application_customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.customer:{customer_id}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 86400",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerProvision"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/signup": {
            "post": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Platform Workspace",
                "description": "Create a new platform workspace.",
                "operationId": "customer_signup_accounts_app_v1_customers_signup_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_customer_signup_accounts_app_v1_customers_signup_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerSelection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "451": {
                        "description": "Unavailable For Legal Reasons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTExtract": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/trend/{platform_customer_id}": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Get Customer Trend",
                "description": "Get platform customers added trend for the time window.",
                "operationId": "get_platform_customer_all_details_accounts_app_v1_customers_trend__platform_customer_id__get",
                "parameters": [
                    {
                        "description": "Retrieve customer trend for platform customer id",
                        "required": true,
                        "schema": {
                            "title": "Platform Customer ID",
                            "type": "string",
                            "description": "Retrieve customer trend for platform customer id"
                        },
                        "name": "platform_customer_id",
                        "in": "path"
                    },
                    {
                        "description": "begintime of timewindow in secs.",
                        "required": true,
                        "schema": {
                            "title": "begintime of timewindow in secs",
                            "type": "integer",
                            "description": "begintime of timewindow in secs."
                        },
                        "name": "begintime",
                        "in": "query"
                    },
                    {
                        "description": "endtime of timewindow in secs.",
                        "required": true,
                        "schema": {
                            "title": "endtime of timewindow in secs",
                            "type": "integer",
                            "description": "endtime of timewindow in secs."
                        },
                        "name": "endtime",
                        "in": "query"
                    },
                    {
                        "description": "Set this to true for running totals.",
                        "required": false,
                        "schema": {
                            "title": "Set this to true for running totals",
                            "type": "boolean",
                            "description": "Set this to true for running totals.",
                            "default": false
                        },
                        "name": "running_totals",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trend_data"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/portal-customization": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Portal Customization",
                "description": "Get portal customization details",
                "operationId": "get_portal_customization_accounts_app_v1_customers_portal_customization_get",
                "parameters": [
                    {
                        "description": "Portal customization details for Customer id.",
                        "required": true,
                        "schema": {
                            "title": "Customer ID",
                            "type": "string",
                            "description": "Portal customization details for Customer id."
                        },
                        "name": "customer_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortalCustomization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Portal Customization",
                "description": "Update portal customization details such as displayed company logos, company branding and etc.",
                "operationId": "update_portal_customization_accounts_app_v1_customers_portal_customization_put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_update_portal_customization_accounts_app_v1_customers_portal_customization_put"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Portal Customization",
                "description": "Add portal customization details such as displayed company logos, company branding and etc.",
                "operationId": "add_portal_customization_accounts_app_v1_customers_portal_customization_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_add_portal_customization_accounts_app_v1_customers_portal_customization_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported Customer endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/customers/{customer_id}": {
            "get": {
                "tags": [
                    "App-Instance-Customer-Management"
                ],
                "summary": "Get Workspace",
                "description": "Get workspace basic details.",
                "operationId": "get_customer_details_accounts_app_v1_customers__customer_id__get",
                "parameters": [
                    {
                        "description": "Retrieve an account details based on the customer id",
                        "required": true,
                        "schema": {
                            "title": "Customer ID",
                            "type": "string",
                            "description": "Retrieve an account details based on the customer id"
                        },
                        "name": "customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.customer-basic-details:{customer_id}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 86400",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/users": {
            "get": {
                "tags": [
                    "App-Instance-User-Management"
                ],
                "summary": "Get Users",
                "description": "Get user(s) matching given filters. All users when no filters are provided.",
                "operationId": "get_users_accounts_app_v1_users_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 2000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Filter by username(email address)",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by username(email address)"
                        },
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "description": "Filter by a CCS platform ID.",
                        "required": false,
                        "schema": {
                            "title": "Platform Customer ID",
                            "type": "string",
                            "description": "Filter by a CCS platform ID."
                        },
                        "name": "platform_customer_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application customer ID. When platform CID is not known.",
                        "required": false,
                        "schema": {
                            "title": "Application Instance Customer ID",
                            "type": "string",
                            "description": "Filter by application customer ID. When platform CID is not known."
                        },
                        "name": "application_customer_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application ID. Across all application instances.",
                        "required": false,
                        "schema": {
                            "title": "Application ID",
                            "type": "string",
                            "description": "Filter by application ID. Across all application instances."
                        },
                        "name": "application_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application instance ID. When used as the only filter, gets users for the given application instance.",
                        "required": false,
                        "schema": {
                            "title": "Application Instance ID",
                            "type": "string",
                            "description": "Filter by application instance ID. When used as the only filter, gets users for the given application instance."
                        },
                        "name": "application_instance_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by one or more user status.",
                        "required": false,
                        "schema": {
                            "title": "User Status",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserStatus"
                            },
                            "description": "Filter by one or more user status."
                        },
                        "name": "user_status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user active/inactive status.",
                        "required": false,
                        "schema": {
                            "title": "User Activity Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/UserActivityStatus"
                                }
                            ],
                            "description": "Filter by user active/inactive status."
                        },
                        "name": "user_activity_status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the MSP ID. NOT SUPPORTED.",
                        "required": false,
                        "schema": {
                            "title": "MSP ID",
                            "type": "string",
                            "description": "Filter by the MSP ID. NOT SUPPORTED."
                        },
                        "name": "msp_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by one or more user types",
                        "required": false,
                        "schema": {
                            "title": "User Type",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserType"
                            },
                            "description": "Filter by one or more user types"
                        },
                        "name": "user_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter by users of a particular email domain.",
                        "required": false,
                        "schema": {
                            "title": "Email Domain",
                            "type": "string",
                            "description": "Filter by users of a particular email domain."
                        },
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user's first name.",
                        "required": false,
                        "schema": {
                            "title": "First Name",
                            "type": "string",
                            "description": "Filter by user's first name."
                        },
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user's last name.",
                        "required": false,
                        "schema": {
                            "title": "Last Name",
                            "type": "string",
                            "description": "Filter by user's last name."
                        },
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Application Provision Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProvisionStatus"
                                }
                            ]
                        },
                        "name": "provision_status",
                        "in": "query"
                    },
                    {
                        "description": "Append a list of all the unverified users to the list too(filter accepted only if platform_customer_id is provided)",
                        "required": false,
                        "schema": {
                            "title": "include unverified users",
                            "type": "boolean",
                            "description": "Append a list of all the unverified users to the list too(filter accepted only if platform_customer_id is provided)",
                            "default": false
                        },
                        "name": "include_unverified",
                        "in": "query"
                    },
                    {
                        "description": "Discard MSP users from the results.",
                        "required": false,
                        "schema": {
                            "title": "Discard MSP users from the results",
                            "type": "boolean",
                            "description": "Discard MSP users from the results."
                        },
                        "name": "ignore_msp_users",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserEventPaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "412": {
                        "description": "Invalid query was made."
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/users/usernames": {
            "get": {
                "tags": [
                    "App-Instance-User-Management"
                ],
                "summary": "Get User IDs",
                "description": "Get user ID(s) matching given filters. All user IDs when no filters are provided.",
                "operationId": "get_user_ids_accounts_app_v1_users_usernames_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 2000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Filter by username(email address)",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "title": "Username/Email address",
                            "type": "string",
                            "description": "Filter by username(email address)"
                        },
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "description": "Filter by a CCS platform ID.",
                        "required": false,
                        "schema": {
                            "title": "Platform Customer ID",
                            "type": "string",
                            "description": "Filter by a CCS platform ID."
                        },
                        "name": "platform_customer_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application customer ID. When platform CID is not known.",
                        "required": false,
                        "schema": {
                            "title": "Application Instance Customer ID",
                            "type": "string",
                            "description": "Filter by application customer ID. When platform CID is not known."
                        },
                        "name": "application_customer_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application ID. Across all application instances.",
                        "required": false,
                        "schema": {
                            "title": "Application ID",
                            "type": "string",
                            "description": "Filter by application ID. Across all application instances."
                        },
                        "name": "application_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by application instance ID. When used as the only filter, gets users for the given application instance.",
                        "required": false,
                        "schema": {
                            "title": "Application Instance ID",
                            "type": "string",
                            "description": "Filter by application instance ID. When used as the only filter, gets users for the given application instance."
                        },
                        "name": "application_instance_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by one or more user status.",
                        "required": false,
                        "schema": {
                            "title": "User Status",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserStatus"
                            },
                            "description": "Filter by one or more user status."
                        },
                        "name": "user_status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user active/inactive status.",
                        "required": false,
                        "schema": {
                            "title": "User Activity Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/UserActivityStatus"
                                }
                            ],
                            "description": "Filter by user active/inactive status."
                        },
                        "name": "user_activity_status",
                        "in": "query"
                    },
                    {
                        "description": "Filter by the MSP ID. NOT SUPPORTED.",
                        "required": false,
                        "schema": {
                            "title": "MSP ID",
                            "type": "string",
                            "description": "Filter by the MSP ID. NOT SUPPORTED."
                        },
                        "name": "msp_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter by one or more user types",
                        "required": false,
                        "schema": {
                            "title": "User Type",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserType"
                            },
                            "description": "Filter by one or more user types"
                        },
                        "name": "user_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter by users of a particular email domain.",
                        "required": false,
                        "schema": {
                            "title": "Email Domain",
                            "type": "string",
                            "description": "Filter by users of a particular email domain."
                        },
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user's first name.",
                        "required": false,
                        "schema": {
                            "title": "First Name",
                            "type": "string",
                            "description": "Filter by user's first name."
                        },
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "description": "Filter by user's last name.",
                        "required": false,
                        "schema": {
                            "title": "Last Name",
                            "type": "string",
                            "description": "Filter by user's last name."
                        },
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Application Provision Status",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ProvisionStatus"
                                }
                            ]
                        },
                        "name": "provision_status",
                        "in": "query"
                    },
                    {
                        "description": "Append a list of all the unverified users to the list too(filter accepted only if platform_customer_id is provided)",
                        "required": false,
                        "schema": {
                            "title": "include unverified users",
                            "type": "boolean",
                            "description": "Append a list of all the unverified users to the list too(filter accepted only if platform_customer_id is provided)",
                            "default": false
                        },
                        "name": "include_unverified",
                        "in": "query"
                    },
                    {
                        "description": "Discard MSP users from the results.",
                        "required": false,
                        "schema": {
                            "title": "Discard MSP users from the results",
                            "type": "boolean",
                            "description": "Discard MSP users from the results."
                        },
                        "name": "ignore_msp_users",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Ccs-Proxy-Cache-Key",
                            "type": "string"
                        },
                        "name": "ccs-proxy-cache-key",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.customer-user-association:u:{username}:cid:{customer_id}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 604800",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUsernamesAppInstance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "412": {
                        "description": "Invalid query was made."
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Encountered an error serving the request."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/users/{username}": {
            "get": {
                "tags": [
                    "App-Instance-User-Management"
                ],
                "summary": "Get a user",
                "description": "Get a user with the given username.",
                "operationId": "get_user_accounts_app_v1_users__username__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "headers": {
                            "ccs-proxy-cache-key": {
                                "description": "Cache key is ccs.accounts.v1.user:{username}",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "ccs-proxy-cache-ttl": {
                                "description": "Cache TTL is 86400",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserEvent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "412": {
                        "description": "Invalid query was made."
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Accessing user without the required previliges."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/users/authenticate": {
            "post": {
                "tags": [
                    "App-Instance-User-Management"
                ],
                "summary": "Verify user's credentials",
                "description": "Verify users' credentials against Okta",
                "operationId": "authenticate_user_accounts_app_v1_users_authenticate_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_authenticate_user_accounts_app_v1_users_authenticate_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "412": {
                        "description": "Failed Authentication"
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/managed-service/tenant/{customer_id}": {
            "get": {
                "tags": [
                    "App-Instance-Managed-service"
                ],
                "summary": "Fetch a Managed Service Tenant",
                "description": "Get tenant details",
                "operationId": "get_tenant_accounts_app_v1_managed_service_tenant__customer_id__get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "App-Instance-Managed-service"
                ],
                "summary": "Delete a Managed Service Tenant",
                "description": "Delete an existing tenant in the currently logged in MSP's workspace.",
                "operationId": "remove_tenant_accounts_app_v1_managed_service_tenant__customer_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/managed-service/tenants": {
            "get": {
                "tags": [
                    "App-Instance-Managed-service"
                ],
                "summary": "Get Managed Service Tenant(s)",
                "description": "Get all tenants of the currently logged in MSP's workspace.",
                "operationId": "get_tenants_accounts_app_v1_managed_service_tenants_get",
                "parameters": [
                    {
                        "description": "Specify pagination offset",
                        "required": false,
                        "schema": {
                            "title": "Pagination offset",
                            "minimum": 0.0,
                            "type": "integer",
                            "description": "Specify pagination offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                        "required": false,
                        "schema": {
                            "title": "Pagination Limit",
                            "maximum": 2000.0,
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "Maximum number of entries per page. NOTE: Due to scale max allowed limit is reduced to 300.",
                            "default": 300
                        },
                        "name": "count_per_page",
                        "in": "query"
                    },
                    {
                        "description": "Platform Customer id",
                        "required": true,
                        "schema": {
                            "title": "Platform Customer id",
                            "type": "string",
                            "description": "Platform Customer id"
                        },
                        "name": "platform_cid",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantsPaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/managed-service/tenant": {
            "put": {
                "tags": [
                    "App-Instance-Managed-service"
                ],
                "summary": "Update Managed Service Tenant",
                "description": "Update an existing tenant in the currently logged in MSP's workspace.",
                "operationId": "update_tenant_api_accounts_app_v1_managed_service_tenant_put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "App-Instance-Managed-service"
                ],
                "summary": "Create Managed Service Tenant",
                "description": "Add a new tenant in the currently logged in MSP's account.",
                "operationId": "add_tenant_accounts_app_v1_managed_service_tenant_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Customer Id",
                            "type": "string"
                        },
                        "name": "customer_id",
                        "in": "header"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_add_tenant_accounts_app_v1_managed_service_tenant_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User endpoint API"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/scim/user": {
            "put": {
                "tags": [
                    "App-Instance-SCIM"
                ],
                "summary": "Update User details",
                "description": "Update existing user details",
                "operationId": "update_user_accounts_app_v1_scim_user_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSCIM"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTExtract": []
                    }
                ]
            }
        },
        "/accounts/app/v1/scim/user/{username}": {
            "delete": {
                "tags": [
                    "App-Instance-SCIM"
                ],
                "summary": "Delete User",
                "description": "Delete existing user",
                "operationId": "delete_user_accounts_app_v1_scim_user__username__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTExtract": []
                    }
                ]
            }
        },
        "/accounts/app/v1/user-invite/{username}/platform/{platform_customer_id}/initiate": {
            "post": {
                "tags": [
                    "App-Instance-User-Invite"
                ],
                "summary": "Initiate user invite",
                "description": "Stores the record of invited user in cache",
                "operationId": "initiate_user_invite_to_platform_account_accounts_app_v1_user_invite__username__platform__platform_customer_id__initiate_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Platform Customer Id",
                            "type": "string"
                        },
                        "name": "platform_customer_id",
                        "in": "path"
                    },
                    {
                        "description": "Time to live in days",
                        "required": true,
                        "schema": {
                            "title": "TTL",
                            "type": "integer",
                            "description": "Time to live in days"
                        },
                        "name": "ttl",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User-invite endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/user-invite/{username}/platform/{platform_customer_id}/verify": {
            "post": {
                "tags": [
                    "App-Instance-User-Invite"
                ],
                "summary": "Verify invited user",
                "description": "Verification of invited user and adding to DB",
                "operationId": "verify_invited_user_to_platform_account_accounts_app_v1_user_invite__username__platform__platform_customer_id__verify_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Platform Customer Id",
                            "type": "string"
                        },
                        "name": "platform_customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User-invite endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/accounts/app/v1/user-invite/platform/{platform_customer_id}/disassociate/{username}": {
            "delete": {
                "tags": [
                    "App-Instance-User-Invite"
                ],
                "summary": "Disassociate User",
                "description": "Disassociate a user for the given username from a platform workspace",
                "operationId": "disassociate_user_accounts_app_v1_user_invite_platform__platform_customer_id__disassociate__username__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Username",
                            "type": "string"
                        },
                        "name": "username",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Platform Customer Id",
                            "type": "string"
                        },
                        "name": "platform_customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unsupported User-invite endpoint API"
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPExceptionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccountSearchFields": {
                "title": "AccountSearchFields",
                "enum": [
                    "SEARCH_CUSTOMER_ID_NAME",
                    "SEARCH_CUSTOMER_NAME_DESCR"
                ],
                "description": "An enumeration."
            },
            "AccountSortBy": {
                "title": "AccountSortBy",
                "enum": [
                    "ACCOUNT_SORT_BY_RECENT",
                    "+ACCOUNT_SORT_BY_RECENT",
                    "-ACCOUNT_SORT_BY_RECENT",
                    "ACCOUNT_SORT_BY_ALPHABETIC",
                    "+ACCOUNT_SORT_BY_ALPHABETIC",
                    "-ACCOUNT_SORT_BY_ALPHABETIC",
                    "ACCOUNT_SORT_BY_RECENT_CREATE",
                    "+ACCOUNT_SORT_BY_RECENT_CREATE",
                    "-ACCOUNT_SORT_BY_RECENT_CREATE"
                ],
                "description": "An enumeration."
            },
            "AccountStatus": {
                "title": "AccountStatus",
                "enum": [
                    "CREATING",
                    "BLOCKED",
                    "INACTIVE",
                    "ACTIVE",
                    "CONFIRMED_BLOCKED",
                    "DELETE_INITIATED"
                ],
                "description": "Keeps track of customer account status e.g.\ncreation, compliance and etc."
            },
            "AccountType": {
                "title": "AccountType",
                "enum": [
                    "STANDALONE",
                    "MSP",
                    "TENANT"
                ],
                "description": "An enumeration."
            },
            "Body_add_portal_customization_accounts_app_v1_customers_portal_customization_post": {
                "title": "Body_add_portal_customization_accounts_app_v1_customers_portal_customization_post",
                "required": [
                    "portal_customization",
                    "customer_id"
                ],
                "type": "object",
                "properties": {
                    "portal_customization": {
                        "$ref": "#/components/schemas/PortalCustomization"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "type": "string",
                        "description": "Portal customization details for Customer id."
                    }
                }
            },
            "Body_add_tenant_accounts_app_v1_managed_service_tenant_post": {
                "title": "Body_add_tenant_accounts_app_v1_managed_service_tenant_post",
                "required": [
                    "tenant",
                    "created_by",
                    "platform_cid"
                ],
                "type": "object",
                "properties": {
                    "tenant": {
                        "$ref": "#/components/schemas/Tenant"
                    },
                    "created_by": {
                        "title": "Created By",
                        "type": "string",
                        "format": "email"
                    },
                    "platform_cid": {
                        "title": "Platform Cid",
                        "type": "string"
                    }
                }
            },
            "Body_authenticate_user_accounts_app_v1_users_authenticate_post": {
                "title": "Body_authenticate_user_accounts_app_v1_users_authenticate_post",
                "required": [
                    "username",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    }
                }
            },
            "Body_customer_signup_accounts_app_v1_customers_signup_post": {
                "title": "Body_customer_signup_accounts_app_v1_customers_signup_post",
                "required": [
                    "customer_signup_obj"
                ],
                "type": "object",
                "properties": {
                    "customer_signup_obj": {
                        "$ref": "#/components/schemas/CustomerContactCreation"
                    },
                    "simulator_enabled": {
                        "title": "Simulator Enabled",
                        "type": "boolean",
                        "description": "Flag to make simulator workspace",
                        "default": false
                    }
                }
            },
            "Body_update_portal_customization_accounts_app_v1_customers_portal_customization_put": {
                "title": "Body_update_portal_customization_accounts_app_v1_customers_portal_customization_put",
                "required": [
                    "portal_customization",
                    "customer_id"
                ],
                "type": "object",
                "properties": {
                    "portal_customization": {
                        "$ref": "#/components/schemas/PortalCustomization"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "type": "string",
                        "description": "Portal customization details for Customer id."
                    }
                }
            },
            "CcsAddress": {
                "title": "CcsAddress",
                "type": "object",
                "properties": {
                    "street_address": {
                        "title": "Street Address",
                        "type": "string",
                        "description": "Street Address"
                    },
                    "city": {
                        "title": "City",
                        "maxLength": 40,
                        "type": "string"
                    },
                    "state_or_region": {
                        "title": "Street Address",
                        "maxLength": 220,
                        "type": "string",
                        "description": "Street Address"
                    },
                    "zip": {
                        "title": "Zip Code",
                        "maxLength": 10,
                        "type": "string"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string",
                        "description": "Country Code"
                    },
                    "street_address_2": {
                        "title": "Apt or Suite or Building",
                        "type": "string",
                        "description": "Apt or Suite or Building"
                    }
                }
            },
            "CcsAddressv2": {
                "title": "CcsAddressv2",
                "required": [
                    "country_code"
                ],
                "type": "object",
                "properties": {
                    "street_address": {
                        "title": "Street Address",
                        "maxLength": 220,
                        "type": "string",
                        "description": "Street Address"
                    },
                    "city": {
                        "title": "City",
                        "maxLength": 40,
                        "type": "string"
                    },
                    "state_or_region": {
                        "title": "State or Region",
                        "type": "string"
                    },
                    "zip": {
                        "title": "Zip Code",
                        "maxLength": 10,
                        "type": "string"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Only country is mandatory."
                    },
                    "street_address_2": {
                        "title": "Apt or Suite or Building",
                        "type": "string",
                        "description": "Apt or Suite or Building"
                    }
                },
                "description": "CCS Address Schema.\nNOTE v2 enforces country code validation and makes country mandatory."
            },
            "CountryCode": {
                "title": "CountryCode",
                "enum": [
                    "AW",
                    "AF",
                    "AO",
                    "AI",
                    "AX",
                    "AL",
                    "AD",
                    "AE",
                    "AR",
                    "AM",
                    "AS",
                    "AQ",
                    "TF",
                    "AG",
                    "AU",
                    "AT",
                    "AZ",
                    "BI",
                    "BE",
                    "BJ",
                    "BQ",
                    "BF",
                    "BD",
                    "BG",
                    "BH",
                    "BS",
                    "BA",
                    "BL",
                    "BY",
                    "BZ",
                    "BM",
                    "BO",
                    "BR",
                    "BB",
                    "BN",
                    "BT",
                    "BV",
                    "BW",
                    "CF",
                    "CA",
                    "CC",
                    "CH",
                    "CL",
                    "CN",
                    "CI",
                    "CM",
                    "CD",
                    "CG",
                    "CK",
                    "CO",
                    "KM",
                    "CV",
                    "CR",
                    "CW",
                    "CX",
                    "KY",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DM",
                    "DK",
                    "DO",
                    "DZ",
                    "EC",
                    "EG",
                    "ER",
                    "EH",
                    "ES",
                    "EE",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FR",
                    "FO",
                    "FM",
                    "GA",
                    "GB",
                    "GE",
                    "GG",
                    "GH",
                    "GI",
                    "GN",
                    "GP",
                    "GM",
                    "GW",
                    "GQ",
                    "GR",
                    "GD",
                    "GL",
                    "GT",
                    "GF",
                    "GU",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IM",
                    "IN",
                    "IO",
                    "IE",
                    "IQ",
                    "IS",
                    "IL",
                    "IT",
                    "JM",
                    "JE",
                    "JO",
                    "JP",
                    "KZ",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KN",
                    "KR",
                    "KW",
                    "LA",
                    "LB",
                    "LR",
                    "LY",
                    "LC",
                    "LI",
                    "LK",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "MO",
                    "MF",
                    "MA",
                    "MC",
                    "MD",
                    "MG",
                    "MV",
                    "MX",
                    "MH",
                    "MK",
                    "ML",
                    "MT",
                    "MM",
                    "ME",
                    "MN",
                    "MP",
                    "MZ",
                    "MR",
                    "MS",
                    "MQ",
                    "MU",
                    "MW",
                    "MY",
                    "YT",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NU",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NZ",
                    "OM",
                    "PK",
                    "PA",
                    "PN",
                    "PE",
                    "PH",
                    "PW",
                    "PG",
                    "PL",
                    "PR",
                    "PT",
                    "PY",
                    "PS",
                    "PF",
                    "QA",
                    "RE",
                    "RO",
                    "RU",
                    "RW",
                    "SA",
                    "SD",
                    "SN",
                    "SG",
                    "GS",
                    "SH",
                    "SJ",
                    "SB",
                    "SL",
                    "SV",
                    "SM",
                    "SO",
                    "PM",
                    "RS",
                    "SS",
                    "ST",
                    "SR",
                    "SK",
                    "SI",
                    "SE",
                    "SZ",
                    "SX",
                    "SC",
                    "TC",
                    "TD",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TM",
                    "TL",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TV",
                    "TW",
                    "TZ",
                    "UG",
                    "UA",
                    "UM",
                    "UY",
                    "US",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "ZA",
                    "ZM",
                    "ZW"
                ],
                "description": "An enumeration."
            },
            "Customer": {
                "title": "Customer",
                "required": [
                    "region"
                ],
                "type": "object",
                "properties": {
                    "app_id": {
                        "title": "Application ID",
                        "type": "string",
                        "description": "Customer application ID"
                    },
                    "app_instance_id": {
                        "title": "Application Instance ID",
                        "type": "string",
                        "description": "Customer application instance ID"
                    },
                    "msp_id": {
                        "title": "MSP ID",
                        "type": "string",
                        "description": "Customer MSP ID"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string",
                        "description": "Region Customer belongs to"
                    },
                    "account_status": {
                        "title": "Account Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountStatus"
                            }
                        ],
                        "description": "Current account status of customer"
                    },
                    "provision_status": {
                        "title": "Provision Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProvisionStatus"
                            }
                        ],
                        "description": "Current provision status of customer"
                    }
                }
            },
            "CustomerAccount": {
                "title": "CustomerAccount",
                "type": "object",
                "properties": {
                    "account_type": {
                        "title": "Account Type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountType"
                            }
                        ],
                        "description": "Account type associated with this customer",
                        "default": "STANDALONE"
                    },
                    "status": {
                        "title": "Account Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountStatus"
                            }
                        ],
                        "description": "Account status associated with this customer",
                        "default": "ACTIVE"
                    },
                    "created_at": {
                        "title": "Account Created time",
                        "type": "string",
                        "description": "Time when this customer account was created",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Account Updated time",
                        "type": "string",
                        "description": "Time when this customer account was lastly updated",
                        "format": "date-time"
                    }
                }
            },
            "CustomerContact": {
                "title": "CustomerContact",
                "required": [
                    "company_name"
                ],
                "type": "object",
                "properties": {
                    "created_by": {
                        "title": "User Email",
                        "type": "string",
                        "description": "Email address of user who created the account",
                        "format": "email"
                    },
                    "email": {
                        "title": "Customer Email",
                        "type": "string",
                        "description": "Company Email Address",
                        "format": "email"
                    },
                    "company_name": {
                        "title": "Company Name",
                        "type": "string",
                        "description": "Company Name of customer"
                    },
                    "description": {
                        "title": "Company Description",
                        "type": "string",
                        "description": "Description of the customer's company"
                    },
                    "address": {
                        "title": "CCS Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CcsAddress"
                            }
                        ],
                        "description": "Customer Address"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "type": "string",
                        "description": "Phone number associated with this customer"
                    },
                    "defaulted_country_code": {
                        "title": "Defaulted country code",
                        "type": "boolean",
                        "description": "Check if country code is changed"
                    },
                    "customer_logo": {
                        "title": "Customer logo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContactLogo"
                            }
                        ],
                        "description": "Customer logo associated with this customer",
                        "default": {}
                    }
                }
            },
            "CustomerContactCreation": {
                "title": "CustomerContactCreation",
                "required": [
                    "company_name",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "created_by": {
                        "title": "User Email",
                        "type": "string",
                        "description": "Email address of user who created the account",
                        "format": "email"
                    },
                    "email": {
                        "title": "Customer Email",
                        "type": "string",
                        "description": "Company Email Address",
                        "format": "email"
                    },
                    "company_name": {
                        "title": "Company Name",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Company Name of customer"
                    },
                    "description": {
                        "title": "Company Description",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Description of the customer's company"
                    },
                    "address": {
                        "title": "CCS Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CcsAddressv2"
                            }
                        ],
                        "description": "Customer Address"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "type": "string",
                        "description": "Phone number associated with this customer"
                    },
                    "customer_logo": {
                        "title": "Customer logo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContactLogo"
                            }
                        ],
                        "description": "Customer logo associated with this customer",
                        "default": {}
                    }
                },
                "description": "Sanitized version of CustomerContact used for account creation"
            },
            "CustomerContactLogo": {
                "title": "CustomerContactLogo",
                "type": "object",
                "properties": {
                    "logo": {
                        "title": "Logo",
                        "type": "string",
                        "description": "Customer logo icon"
                    },
                    "logo_filename": {
                        "title": "Logo Filename",
                        "type": "string",
                        "description": "Customer logo name"
                    }
                }
            },
            "CustomerEvent": {
                "title": "CustomerEvent",
                "type": "object",
                "properties": {
                    "contact": {
                        "title": "Account Contact",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContact"
                            }
                        ],
                        "description": "Customer account contact information"
                    },
                    "customer_id": {
                        "title": "Customer id",
                        "type": "string",
                        "description": "Customer ID of the platform account"
                    },
                    "msp_id": {
                        "title": "MSP ID",
                        "type": "string",
                        "description": "Customer MSP ID"
                    },
                    "account": {
                        "title": "Account Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerAccount"
                            }
                        ],
                        "description": "Customer Account details"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string",
                        "description": "Region associated with this customer"
                    },
                    "preferences": {
                        "title": "Customer Preferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerPreferences"
                            }
                        ],
                        "description": "Customer Preferences"
                    }
                },
                "description": "Catch-all class that is used by the API layers to send\nthe full details about a platform customer account.\n\nNOTE Changing this impact app-instance and internal endpoints.\nNOTE: This is used to return details of a platform account"
            },
            "CustomerEventPaginate": {
                "title": "CustomerEventPaginate",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "customers": {
                        "title": "Customers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerEvent"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Paginate"
                    }
                },
                "description": "internal and app instance"
            },
            "CustomerIdPaginate": {
                "title": "CustomerIdPaginate",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "customerIds": {
                        "title": "Customerids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Paginate"
                    }
                }
            },
            "CustomerPreferences": {
                "title": "CustomerPreferences",
                "type": "object",
                "properties": {
                    "customer_id": {
                        "title": "Customer ID",
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "multi_fa_enabled": {
                        "title": "Customer Multi-FA-Enabled",
                        "type": "boolean",
                        "description": "Customer Multi-FA-Enabled"
                    }
                }
            },
            "CustomerProvision": {
                "title": "CustomerProvision",
                "required": [
                    "region",
                    "application_id",
                    "platform_customer_id",
                    "application_instance_id",
                    "application_customer_id"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "username",
                        "type": "string",
                        "description": "User who provisioned the application"
                    },
                    "provision_status": {
                        "title": "Provision status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProvisionStatus"
                            }
                        ],
                        "description": "Both provision status and account_type cannot be null"
                    },
                    "account_type": {
                        "title": "Customer Account Type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountType"
                            }
                        ],
                        "description": "Both provision status and account_type cannot be null",
                        "default": "STANDALONE"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string",
                        "description": "Regin used to provision an app"
                    },
                    "application_id": {
                        "title": "Application ID",
                        "type": "string",
                        "description": "Application ID used to provision an app"
                    },
                    "platform_customer_id": {
                        "title": "Platform ID",
                        "type": "string",
                        "description": "Platform ID used to provision an app"
                    },
                    "application_instance_id": {
                        "title": "Application Instance ID",
                        "type": "string",
                        "description": "Application instance ID used to provision an app"
                    },
                    "msp_id": {
                        "title": "MSP ID",
                        "type": "string",
                        "description": "Customer MSP ID"
                    },
                    "msp_conversion_status": {
                        "title": "MSP Conversion Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MspConversionStatus"
                            }
                        ],
                        "description": "MSP Conversion Status"
                    },
                    "application_customer_id": {
                        "title": "Application customer ID",
                        "type": "string",
                        "description": "Application customer ID used to provision an app"
                    },
                    "created_at": {
                        "title": "Application Custumer Account Creation time",
                        "type": "string",
                        "description": "Time when this application customer account was created",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Application Custumer Account last updated time",
                        "type": "string",
                        "description": "Time when this application customer account was last updated",
                        "format": "date-time"
                    },
                    "platform_customer_details": {
                        "title": "Account Contact",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContact"
                            }
                        ],
                        "description": "Customer account contact information"
                    }
                }
            },
            "CustomerProvisionPaginate": {
                "title": "CustomerProvisionPaginate",
                "required": [
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "provisions": {
                        "title": "Provisions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerProvision"
                        },
                        "default": []
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Paginate"
                    }
                }
            },
            "CustomerSelection": {
                "title": "CustomerSelection",
                "required": [
                    "company_name",
                    "platform_customer_id"
                ],
                "type": "object",
                "properties": {
                    "created_by": {
                        "title": "User Email",
                        "type": "string",
                        "description": "Email address of user who created the account",
                        "format": "email"
                    },
                    "email": {
                        "title": "Customer Email",
                        "type": "string",
                        "description": "Company Email Address",
                        "format": "email"
                    },
                    "company_name": {
                        "title": "Company Name",
                        "type": "string",
                        "description": "Company Name of customer"
                    },
                    "description": {
                        "title": "Company Description",
                        "type": "string",
                        "description": "Description of the customer's company"
                    },
                    "address": {
                        "title": "CCS Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CcsAddress"
                            }
                        ],
                        "description": "Customer Address"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "type": "string",
                        "description": "Phone number associated with this customer"
                    },
                    "defaulted_country_code": {
                        "title": "Defaulted country code",
                        "type": "boolean",
                        "description": "Check if country code is changed"
                    },
                    "customer_logo": {
                        "title": "Customer logo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContactLogo"
                            }
                        ],
                        "description": "Customer logo associated with this customer",
                        "default": {}
                    },
                    "msp_id": {
                        "title": "MSP ID",
                        "type": "string",
                        "description": "Customer's managed service ID"
                    },
                    "account_status": {
                        "title": "Account Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountStatus"
                            }
                        ],
                        "description": "Current account status of customer",
                        "default": "ACTIVE"
                    },
                    "account_type": {
                        "title": "Account Type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountType"
                            }
                        ],
                        "description": "Account type associated with this customer",
                        "default": "STANDALONE"
                    },
                    "platform_customer_id": {
                        "title": "Platform Customer ID",
                        "type": "string",
                        "description": "Customer ID associated with the platform"
                    }
                },
                "description": "Custom API model to render customer selection page"
            },
            "GetUsernamesAppInstance": {
                "title": "GetUsernamesAppInstance",
                "required": [
                    "usernames",
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "usernames": {
                        "title": "Usernames",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Paginate"
                    }
                }
            },
            "HTTPExceptionResponse": {
                "title": "HTTPExceptionResponse",
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "string"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "Message": {
                "title": "Message",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "description": "Message"
                    }
                }
            },
            "MspConversionStatus": {
                "title": "MspConversionStatus",
                "enum": [
                    "MSP_CONVERSION_INITIATED",
                    "MSP_CONVERTED",
                    "MSP_CONVERSION_FAILED"
                ],
                "description": "An enumeration."
            },
            "Paginate": {
                "title": "Paginate",
                "type": "object",
                "properties": {
                    "offset": {
                        "title": "Offset",
                        "type": "integer",
                        "default": 0
                    },
                    "count_per_page": {
                        "title": "Count Per Page",
                        "type": "integer",
                        "default": 2000
                    },
                    "total_count": {
                        "title": "Total Count",
                        "type": "integer",
                        "default": 0
                    }
                }
            },
            "PortalCustomization": {
                "title": "PortalCustomization",
                "required": [
                    "display_company_name",
                    "display_product_name"
                ],
                "type": "object",
                "properties": {
                    "branding_logo": {
                        "title": "Branding Logo",
                        "type": "string",
                        "description": "Logo icon"
                    },
                    "branding_favicon": {
                        "title": "Branding Favicon",
                        "type": "string",
                        "description": "Fav icon"
                    },
                    "email_logo": {
                        "title": "Email Logo",
                        "type": "string",
                        "description": "Email Logo icon"
                    },
                    "display_company_name": {
                        "title": "Display Company Name",
                        "type": "string",
                        "description": "Company Name"
                    },
                    "display_product_name": {
                        "title": "Display Product Name",
                        "type": "string",
                        "description": "Product Name"
                    },
                    "display_mailing_address": {
                        "title": "Display Mailing Address",
                        "type": "string",
                        "description": "Mailing Address"
                    },
                    "copyright": {
                        "title": "Copyright",
                        "type": "string",
                        "description": "Copyright"
                    },
                    "terms_conditions_url": {
                        "title": "Terms Conditions Url",
                        "type": "string",
                        "description": "Terms and Conditions"
                    },
                    "privacy_policy_url": {
                        "title": "Privacy Policy Url",
                        "type": "string",
                        "description": "Privacy Policy"
                    },
                    "security_url": {
                        "title": "Security Url",
                        "type": "string",
                        "description": "Security Policy"
                    },
                    "contact_url": {
                        "title": "Contact Url",
                        "type": "string",
                        "description": "Contact us"
                    },
                    "forwarding_email_address": {
                        "title": "Forwarding Email Address",
                        "type": "string",
                        "description": "Forwarding Email Address",
                        "format": "email"
                    },
                    "branding_logo_filename": {
                        "title": "Branding Logo Filename",
                        "type": "string",
                        "description": "Logo icon name"
                    },
                    "branding_favicon_filename": {
                        "title": "Branding Favicon Filename",
                        "type": "string",
                        "description": "Fav icon name"
                    },
                    "email_logo_filename": {
                        "title": "Email Logo Filename",
                        "type": "string",
                        "description": "Email Logo icon name"
                    }
                },
                "description": "Payload used to create/read/update Portal Customization objects"
            },
            "ProvisionStatus": {
                "title": "ProvisionStatus",
                "enum": [
                    "PROVISION_INITIATED",
                    "PROVISIONED",
                    "PROVISION_FAILED",
                    "UNPROVISION_INITIATED",
                    "UNPROVISIONED",
                    "UNPROVISION_FAILED"
                ],
                "description": "An enumeration."
            },
            "SortFields": {
                "title": "SortFields",
                "enum": [
                    "ASCENDING",
                    "DESCENDING"
                ],
                "description": "An enumeration."
            },
            "Tenant": {
                "title": "Tenant",
                "required": [
                    "company_name",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "customer_id": {
                        "title": "Company Name",
                        "type": "string",
                        "description": "Ignored when creating the tenant. Only populated by the backend in read scenerios."
                    },
                    "company_name": {
                        "title": "Company Name",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "description": {
                        "title": "Company Description",
                        "maxLength": 125,
                        "type": "string"
                    },
                    "address": {
                        "title": "Company Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CcsAddressv2"
                            }
                        ]
                    },
                    "created_at": {
                        "title": "Account Created time",
                        "type": "string",
                        "description": "Time when this customer account was created",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Account Updated time",
                        "type": "string",
                        "description": "Time when this customer account was lastly updated",
                        "format": "date-time"
                    },
                    "accessed_at": {
                        "title": "Account Accessed time",
                        "type": "string",
                        "description": "Time when this customer account was last accessed"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "type": "string",
                        "description": "Phone number associated with this customer"
                    },
                    "email": {
                        "title": "Customer Email",
                        "type": "string",
                        "description": "Company Email Address",
                        "format": "email"
                    },
                    "customer_logo": {
                        "title": "Customer logo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerContactLogo"
                            }
                        ],
                        "description": "Customer logo associated with this customer",
                        "default": {}
                    }
                },
                "description": "Payload used to create/read/update managed service tenants"
            },
            "TenantsPaginate": {
                "title": "TenantsPaginate",
                "required": [
                    "tenants",
                    "pagination"
                ],
                "type": "object",
                "properties": {
                    "tenants": {
                        "title": "Tenants",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Paginate"
                    }
                }
            },
            "UserActivityStatus": {
                "title": "UserActivityStatus",
                "enum": [
                    "ACTIVE",
                    "INACTIVE"
                ],
                "description": "An enumeration."
            },
            "UserContact": {
                "title": "UserContact",
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "title": "Email Address",
                        "type": "string",
                        "description": "User's Email Address",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string",
                        "description": "First Name"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string",
                        "description": "Last Name"
                    },
                    "address": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CcsAddress"
                            }
                        ],
                        "description": "User's Address"
                    },
                    "nickname": {
                        "title": "Preferred name",
                        "type": "string",
                        "description": "User's preferred name"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "type": "string",
                        "description": "User's Phone number"
                    },
                    "defaulted_country_code": {
                        "title": "Defaulted country code",
                        "type": "boolean",
                        "description": "Check if country code is changed"
                    }
                }
            },
            "UserEvent": {
                "title": "UserEvent",
                "type": "object",
                "properties": {
                    "contact": {
                        "title": "Contact Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserContact"
                            }
                        ],
                        "description": "Contact details of a user"
                    },
                    "preferences": {
                        "title": "User Preferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserPreferences"
                            }
                        ],
                        "description": "User Preferences configuration of a user"
                    },
                    "platform_customer_ids": {
                        "title": "Platform customer IDs",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of customer IDs associated with the user on the platform.",
                        "deprecated": true
                    },
                    "user_type": {
                        "title": "User Type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserType"
                            }
                        ],
                        "description": "User Type",
                        "deprecated": true
                    },
                    "user_status": {
                        "title": "User Status",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserStatus"
                            }
                        ],
                        "description": "On-Boarding Status of a user"
                    },
                    "created_at": {
                        "title": "User Created time",
                        "type": "string",
                        "description": "Time when this user was created",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "User Update time",
                        "type": "string",
                        "description": "Time when this user was last updated",
                        "format": "date-time"
                    },
                    "last_login": {
                        "title": "User Last Login time",
                        "type": "string",
                        "description": "Time when this user had last logged in.",
                        "format": "date-time"
                    },
                    "previous_contact": {
                        "title": "Previous Contact Details",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserContact"
                            }
                        ],
                        "description": "Previous Contact details of a user"
                    },
                    "previous_preferences": {
                        "title": "Previous User Preferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserPreferences"
                            }
                        ],
                        "description": "Previous User Preferences configuration of a user"
                    }
                },
                "description": "Super class containing all information about a given\nuser contained in multiple tables of the database. Optional fields allow\nfor a subset of fields to be used.\n\nNOTE Changing this impact app-instance and internal endpoints."
            },
            "UserEventPaginate": {
                "title": "UserEventPaginate",
                "type": "object",
                "properties": {
                    "users": {
                        "title": "List of Users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserEvent"
                        },
                        "description": "List of Users",
                        "default": []
                    },
                    "pagination": {
                        "title": "Pagination",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Paginate"
                            }
                        ],
                        "description": "Paginations"
                    }
                }
            },
            "UserLanguages": {
                "title": "UserLanguages",
                "enum": [
                    "en",
                    "de",
                    "es",
                    "fr",
                    "jp",
                    "br",
                    "cn",
                    "ko",
                    "ru",
                    "it"
                ],
                "description": "An enumeration."
            },
            "UserPreferences": {
                "title": "UserPreferences",
                "type": "object",
                "properties": {
                    "language": {
                        "title": "Language",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserLanguages"
                            }
                        ],
                        "description": "User's Language preference",
                        "default": "en"
                    },
                    "timezone": {
                        "title": "Timezone",
                        "type": "string",
                        "description": "Timezone"
                    },
                    "idle_timeout": {
                        "title": "Idle Timeout",
                        "type": "integer",
                        "description": "User's Session idle timeout in seconds",
                        "default": 1800
                    },
                    "maintenance_notifications": {
                        "title": "Maintenance notifications",
                        "type": "boolean",
                        "description": "Maintenance notifications preference",
                        "default": false
                    },
                    "update_notifications": {
                        "title": "Update notifications",
                        "type": "boolean",
                        "description": "Update notifications preference",
                        "default": false
                    },
                    "multi_fa_enabled": {
                        "title": "Multifactor Authentication",
                        "type": "boolean",
                        "description": "Mutlifactor Authentication preference",
                        "default": false
                    },
                    "theme": {
                        "title": "Browser Theme",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserTheme"
                            }
                        ],
                        "description": "User's preference for browser theme",
                        "default": "light"
                    },
                    "multi_fa_registration": {
                        "title": "Register MFA flag",
                        "type": "boolean",
                        "description": "Register MFA on next login",
                        "default": false
                    },
                    "login_context": {
                        "title": "Indicate if called in login context",
                        "type": "boolean",
                        "description": "Indicate if called in login context",
                        "default": false
                    },
                    "mfa_enforced": {
                        "title": "Indicate if MFA is enforced",
                        "type": "boolean",
                        "description": "Indicate if MFA is enforced",
                        "default": false
                    }
                }
            },
            "UserSCIM": {
                "title": "UserSCIM",
                "required": [
                    "name",
                    "emails"
                ],
                "type": "object",
                "properties": {
                    "externalId": {
                        "title": "externalId",
                        "type": "string",
                        "description": "external user id",
                        "default": ""
                    },
                    "name": {
                        "title": "Name",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserSCIMName"
                            }
                        ],
                        "description": "The components of the user's name."
                    },
                    "nickname": {
                        "title": "Nickname",
                        "type": "string",
                        "description": "The casual way to address the user in real life",
                        "default": ""
                    },
                    "emails": {
                        "title": "Emails",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSCIMEmail"
                        },
                        "description": "Email addresses for the User."
                    },
                    "phoneNumbers": {
                        "title": "Phone Numbers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSCIMPhoneNumber"
                        },
                        "description": "Phone numbers for the user."
                    },
                    "addresses": {
                        "title": "Addresses",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSCIMAddress"
                        },
                        "description": "A physical mailing address for this user"
                    }
                },
                "description": "Mapping SCIM user payload"
            },
            "UserSCIMAddress": {
                "title": "UserSCIMAddress",
                "type": "object",
                "properties": {
                    "primary": {
                        "title": "Primary",
                        "type": "boolean",
                        "description": "A Boolean value indicating the 'primary' or preferred address",
                        "default": false
                    },
                    "streetAddress": {
                        "title": "Street Address",
                        "type": "string",
                        "description": "The full street address component"
                    },
                    "locality": {
                        "title": "Loclity",
                        "type": "string",
                        "description": "The city or locality component."
                    },
                    "region": {
                        "title": "Region",
                        "type": "string",
                        "description": "The state or region component."
                    },
                    "postalCode": {
                        "title": "Postal Code",
                        "type": "string",
                        "description": "The zip code or postal code component."
                    },
                    "hpeCountryCode": {
                        "title": "Country",
                        "type": "string",
                        "description": "The country name component.  When specified, the value MUST be in ISO 3166-1 alpha-2 code format"
                    }
                },
                "description": "Mapping SCIM user address payload"
            },
            "UserSCIMEmail": {
                "title": "UserSCIMEmail",
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "string",
                        "description": "Email for the user."
                    },
                    "primary": {
                        "title": "Primary",
                        "type": "boolean",
                        "description": "A Boolean value indicating the 'primary' or preferred email address",
                        "default": false
                    }
                },
                "description": "Mapping SCIM user email payload"
            },
            "UserSCIMName": {
                "title": "UserSCIMName",
                "required": [
                    "familyName",
                    "givenName"
                ],
                "type": "object",
                "properties": {
                    "familyName": {
                        "title": "Family Name",
                        "type": "string",
                        "description": "The family name of the User, or last name in most Western languages"
                    },
                    "givenName": {
                        "title": "Given Name",
                        "type": "string",
                        "description": "The given name of the User, or first name in most Western languages"
                    }
                },
                "description": "Mapping SCIM user name payload"
            },
            "UserSCIMPhoneNumber": {
                "title": "UserSCIMPhoneNumber",
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "string",
                        "description": "Phone number for the user."
                    }
                },
                "description": "Mapping SCIM user phone number payload"
            },
            "UserStatus": {
                "title": "UserStatus",
                "enum": [
                    "UNVERIFIED",
                    "VERIFIED",
                    "BLOCKED",
                    "DELETE_IN_PROGRESS",
                    "DELETED",
                    "SUSPENDED"
                ],
                "description": "An enumeration."
            },
            "UserTheme": {
                "title": "UserTheme",
                "enum": [
                    "dark",
                    "light"
                ],
                "description": "An enumeration."
            },
            "UserType": {
                "title": "UserType",
                "enum": [
                    "FEDERATED",
                    "NON_FEDERATED"
                ],
                "description": "An enumeration."
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "trend": {
                "title": "trend",
                "required": [
                    "data",
                    "ts"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "integer"
                    },
                    "ts": {
                        "title": "Ts",
                        "type": "string"
                    }
                }
            },
            "trend_data": {
                "title": "trend_data",
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "Items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/trend"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "JWTAuth": {
                "type": "http",
                "scheme": "bearer"
            },
            "JWTExtract": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "App-Instance-Customer-Management",
            "description": "Operations specific to Customers for App instance APIs",
            "x-displayName": "Customer Management"
        },
        {
            "name": "App-Instance-User-Management",
            "description": "Operations specific to Users for App instance APIs",
            "x-displayName": "User Management"
        },
        {
            "name": "App-Instance-Managed-service",
            "description": "Operations specific to MSP for App instance APIs",
            "x-displayName": "Managed Service"
        },
        {
            "name": "App-Instance-SCIM",
            "description": "Operations specific to SCIM",
            "x-displayName": "SCIM Operations"
        },
        {
            "name": "App-Instance-User-Invite",
            "description": "Operations specific to User Invite",
            "x-displayName": "User-invite Operations"
        },
        {
            "name": "NB-Api-Customer",
            "description": "Operations specific to Customers for NB APIs",
            "x-displayName": "Customer Management"
        },
        {
            "name": "NB-Api-User",
            "description": "Operations specific to Users for NB APIs",
            "x-displayName": "User Management"
        },
        {
            "name": "Internal-Api-Customer",
            "description": "Operations specific to Customers for Internal APIs",
            "x-displayName": "Customer Management"
        },
        {
            "name": "Internal-Api-User",
            "description": "Operations specific to Users for Internal instance APIs",
            "x-displayName": "User Management"
        },
        {
            "name": "Internal-Api-IP-Rule",
            "description": "Operations specific to IP Access Rules for Internal instance APIs",
            "x-displayName": "IPAccessRules Management"
        },
        {
            "name": "UI-Api-IP-Rule",
            "description": "Operations specific to IP Access Rules for UI APIs",
            "x-displayName": "IPAccessRules Management"
        },
        {
            "name": "UI-Api-Customer",
            "description": "Operations specific to Customers for UI APIs",
            "x-displayName": "Customer Management"
        },
        {
            "name": "UI-Api-User",
            "description": "Operations specific to Users for UI APIs",
            "x-displayName": "User Management"
        },
        {
            "name": "UI-Api-Status",
            "description": "Operations specific to the status of the API server",
            "x-displayName": "Status"
        },
        {
            "name": "ON-PREM",
            "description": "Operations specific to On-prem deployments",
            "x-displayName": "on-prem"
        },
        {
            "name": "customer-signup-ui",
            "description": "Operations specific to Customer Signup UI APIs",
            "x-displayName": "Account Onboarding"
        },
        {
            "name": "managed-service-ui",
            "description": "MSP and MSP tenant operations.",
            "x-display-name": "Managed Service"
        },
        {
            "name": "customer-profile-ui",
            "description": "Operations specific to Customer Account UI APIs",
            "x-displayName": "Account Operations"
        },
        {
            "name": "user-signup-ui",
            "description": "Operations specific to User signup UI APIs",
            "x-displayName": "Signup"
        },
        {
            "name": "user-profile-ui",
            "description": "Operations specific to User account UI APIs",
            "x-displayName": "Account Operations"
        },
        {
            "name": "user-password-ui",
            "description": "Operations specific to User Password UI APIs",
            "x-displayName": "Password Management"
        },
        {
            "name": "api-service-status",
            "description": "APIs for server status",
            "x-displayName": "Service Status"
        },
        {
            "name": "user-invite-ui",
            "description": "Operations specific to when a user is invited",
            "x-displayName": "User Invite"
        },
        {
            "name": "on-prem-install",
            "description": "Operations specific to on-prem installation",
            "x-displayName": "On-Prem Install"
        },
        {
            "name": "Nb-Shim-Layer",
            "description": "Operations specific to Nb shim APIs",
            "x-displayName": "User Management"
        },
        {
            "name": "internal-migration",
            "description": "Operations specific to migration",
            "x-displayName": "Migration Operations"
        },
        {
            "name": "Internal-COP-Authentication",
            "description": "Operations specific to COP Authentication Internal APIs",
            "x-displayName": "COP Authentication Operations"
        },
        {
            "name": "UI-COP-Authentication",
            "description": "Operations specific to COP Authentication UI APIs",
            "x-displayName": "COP Authentication Operations"
        },
        {
            "name": "UI-COP-PINGFED",
            "description": "APIs Accessable to Pingfed COP UI",
            "x-displayName": "COP Pingfed UI APIs"
        },
        {
            "name": "UI-TASK-TRACKER",
            "description": "Operations specific to async tasks",
            "x-displayName": "Task Tracker"
        },
        {
            "name": "Internal-COP-Customer",
            "description": "Operations specific to COP Customers",
            "x-displayName": "COP Customer Internal APIs"
        }
    ],
    "x-tagGroups": [
        {
            "name": "CCS Data APIs",
            "tags": [
                "App-Instance-Customer-Management",
                "App-Instance-User-Management",
                "App-Instance-Managed-service",
                "App-Instance-SCIM",
                "App-Instance-User-Invite"
            ]
        }
    ]
}